/*
 * Authorize.Net REST API
 *
 * Authorize.Net REST API
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;
using IO.Swagger.Security;
using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class CustomersProfilesApiController : ControllerBase
    { 
        /// <summary>
        /// Create A Customer Profile
        /// </summary>
        /// <remarks>Create a new customer profile that contains a payment method.</remarks>
        /// <param name="body">Contains the information required to create a customer profile with an asociated payment method.</param>
        /// <response code="200">OK</response>
        [HttpPost]
        [Route("//v1/customers")]
        [Authorize(AuthenticationSchemes = BasicAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("CreateCustomerAndPaymentMethod")]
        [SwaggerResponse(statusCode: 200, type: typeof(Customer), description: "OK")]
        public virtual IActionResult CreateCustomerAndPaymentMethod([FromBody]CreateCustomerAndPaymentMethod body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Customer));
            string exampleJson = null;
            exampleJson = "{\r\n  \"identifier\" : {\r\n    \"reference\" : \"reference\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"_links\" : { },\r\n  \"description\" : \"description\",\r\n  \"id\" : \"id\"\r\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Customer>(exampleJson)
                        : default(Customer);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get All Customer Profiles
        /// </summary>
        /// <remarks>Get a list of all customer profiles associated with this Authorize.Net account.</remarks>
        /// <param name="offset">The number of the page to return results from. For example, if limit is set to 100, and offset is set to 2, the function will return 100 transactions, beginning with the transaction that would otherwise be the transaction numbered 101 in the result set. Accepted values are 1-100000.</param>
        /// <param name="limit">The number of transactions per page. Accepted values are 1-1000.</param>
        /// <response code="200">OK</response>
        [HttpGet]
        [Route("//v1/customers")]
        [Authorize(AuthenticationSchemes = BasicAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("GetAllCustomers")]
        [SwaggerResponse(statusCode: 200, type: typeof(CustomerCollection), description: "OK")]
        public virtual IActionResult GetAllCustomers([FromQuery]int? offset, [FromQuery]int? limit)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(CustomerCollection));
            string exampleJson = null;
            exampleJson = "{\r\n  \"totalCustomers\" : 0,\r\n  \"_links\" : {\r\n    \"self\" : {\r\n      \"method\" : \"method\",\r\n      \"href\" : \"href\",\r\n      \"title\" : \"title\"\r\n    }\r\n  },\r\n  \"_embedded\" : {\r\n    \"customers\" : [ {\r\n      \"identifier\" : {\r\n        \"reference\" : \"reference\",\r\n        \"email\" : \"email\"\r\n      },\r\n      \"_links\" : { },\r\n      \"description\" : \"description\",\r\n      \"id\" : \"id\"\r\n    }, {\r\n      \"identifier\" : {\r\n        \"reference\" : \"reference\",\r\n        \"email\" : \"email\"\r\n      },\r\n      \"_links\" : { },\r\n      \"description\" : \"description\",\r\n      \"id\" : \"id\"\r\n    } ]\r\n  }\r\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<CustomerCollection>(exampleJson)
                        : default(CustomerCollection);            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
