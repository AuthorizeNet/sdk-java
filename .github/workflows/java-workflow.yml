name: Authorize.net Java CI
on:
  push:
  pull_request:
  workflow_dispatch:
env:
  sdk_java: 'sdk-java'
  sample_code_java: 'sample-code-java'
jobs:
  workflow-job:
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest, macos-latest, windows-latest]
        java-version: ['11', '16', '17', '18', '19', '20', '21', '22'] # Removed Java 8 as it is incompatible with jakarta
        distribution: ['temurin']
    runs-on: ${{matrix.operating-system}}
    steps:
      - name: Creating separate folders for SDK and Sample Codes
        run: |
          rm -rf $sdk_java
          rm -rf $sample_code_java
          mkdir $sdk_java $sample_code_java
      - name: Checkout authorizenet/sdk-java
        uses: actions/checkout@v4
        with:
          path: ${{env.sdk_java}}
      - name: Checkout authorizenet/sample-code-java
        uses: actions/checkout@v4
        with:
          repository: 'authorizenet/sample-code-java'
          ref: 'master'
          path: ${{env.sample_code_java}}
      - name: Setup Java 17 to build the SDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Build the Java SDK
        run: |
          mvn -version
          java -version
          cd $sdk_java
          mvn clean install
      - name: Replace the version of SDK in samples' pom file
        run: |
          cd $sdk_java
          SDK_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo $SDK_VERSION
          cd ../$sample_code_java
          perl -i -spe "BEGIN{undef $/;} s|<groupId>net\.authorize<\/groupId>\s*<artifactId>anet-java-sdk<\/artifactId>\s*<version>.*?<\/version>|<groupId>net.authorize</groupId>\n   <artifactId>anet-java-sdk</artifactId>\n  <version>\${version}</version>|g" -- -version=$SDK_VERSION pom.xml
          cat pom.xml
      - name: Setup Java version to Build the samples
        uses: actions/setup-java@v2
        with:
          distribution: ${{matrix.distribution}}
          java-version: ${{matrix.java-version}}
      - name: Build the Sample Project and Run the Samples
        run: |
          mvn -version
          java -version  
          
          cd $sdk_java
          SDK_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo $SDK_VERSION
          
          cd ../$sample_code_java
          mvn install -DsdkVersion=$SDK_VERSION -DskipTests=true -Dmaven.javadoc.skip=true -B -V
          echo "Running Samples"
          mvn test -DsdkVersion=$SDK_VERSION -B