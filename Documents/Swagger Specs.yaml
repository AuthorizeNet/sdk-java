  swagger: '2.0'
  info:
    title: Authorize.Net REST API
    description: Authorize.Net REST API
    version: '1.0'
    contact:
      name: developer_feedback@authorize.net
  host: api.authorize.net
  schemes:
    - https
  securityDefinitions:
    basic:
      type: basic
    oauth:
      type: oauth2
      flow: implicit
      authorizationUrl: 'https://account.authorize.net/oauth/authorize'
      scopes:
        read: List and view details
        write: 'Create, list, and view details'
  paths:
    /v1/customers:
      post:
        tags:
          - customers-profiles
        summary: Create A Customer Profile
        description: Create a new customer profile that contains a payment method.
        operationId: CreateCustomerAndPaymentMethod
        consumes:
          - application/json
        produces:
          - application/json
        security:
          - oauth:
              - write
          - basic: []
        x-example:
          create-customer-example1:
            summary: Create Customer
            value:
              description: Test Customer1300
              identifier:
                email: cus1300@authorize.com
                reference: Customer1300
        parameters:
          - name: CreateCustomerAndPaymentMethod
            in: body
            description: Contains the information required to create a customer profile with an asociated payment method.
            required: true
            schema:
              $ref: '#/definitions/CreateCustomerAndPaymentMethod'
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/Customer'
            x-example:
              create-customer-response1:
                summary: Create Customer Response
                value:
                  id: '40198318'
                  description: Test Customer1300
                  identifier:
                    email: cus1300@authorize.com
                    reference: Customer1300
                  _links:
                    self:
                      href: /rest/v1/customers/40198318
                      method: GET
                    paymentMethods:
                      href: /rest/v1/customers/40198318/paymentMethods
                      method: GET
                    addresses:
                      href: /rest/v1/customers/40198318/addresses
                      method: GET
      get:
        tags:
          - customers-profiles
        summary: Get All Customer Profiles
        description: Get a list of all customer profiles associated with this Authorize.Net account.
        operationId: getAllCustomers
        produces:
          - application/json
        security:
          - oauth:
              - read
          - basic: []
        parameters:
          - name: offset
            in: query
            type: integer
            required: false
            description: 'The number of the page to return results from. For example, if limit is set to 100, and offset is set to 2, the function will return 100 transactions, beginning with the transaction that would otherwise be the transaction numbered 101 in the result set. Accepted values are 1-100000.'
          - name: limit
            in: query
            type: integer
            required: false
            description: The number of transactions per page. Accepted values are 1-1000.
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/CustomerCollection'
            x-example: {}
    '/v1/customers/{customerId}/addresses':
      post:
        tags:
          - customers-addresses
        summary: Create A Customer Address
        description: Create an address associated with a customer profile.
        operationId: createCustomerAddress
        consumes:
          - application/json
        produces:
          - application/json
        security:
          - oauth:
              - write
          - basic: []
        x-example:
          add-customer-address-example1:
            summary: Add Customer Address
            value:
              address1: 10 Ave 10 St.
              administrativeArea: WA
              company: Net
              country: US
              firstName: jim
              lastName: carry
              locality: Redmond
              phoneNumber: 425 555 6666
              postalCode: '98052'
        parameters:
          - name: customerId
            in: path
            type: string
            description: 'Unique identifier of the customer profile, which was returned in the original transaction response.'
            required: true
          - name: createCustomerAddress
            in: body
            description: Contains address information.
            required: true
            schema:
              $ref: '#/definitions/CreateCustomerAddress'
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/address'
            x-example: {}
          '404':
            description: Address not created
            schema:
              $ref: '#/definitions/errorResponse'
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/errorResponse'
      get:
        tags:
          - customers-addresses
        summary: Get All Customer Addresses
        description: Get a list of all addresses associated with one customer profile.
        operationId: getAllCustomerAddresses
        security:
          - oauth:
              - read
          - basic: []
        parameters:
          - name: customerId
            in: path
            type: string
            description: 'Unique identifier of the customer profile, from the original profile creation response.'
            required: true
          - name: offset
            in: query
            type: integer
            required: false
            description: 'The number of the page to return results from. For example, if limit is set to 100, and offset is set to 2, the function will return 100 transactions starting with the transaction that would otherwise be the transaction numbered 101 in the result set. Accepted values are 1-100000.'
          - name: limit
            in: query
            type: integer
            required: false
            description: The number of transactions per page. Accepted values are 1-1000.
        produces:
          - application/json
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/addressCollection'
            x-example: {}
    '/v1/customers/{customerId}/paymentmethods':
      post:
        tags:
          - customers-payment_methods
        summary: Create A Payment Method
        description: Create and payment method associated with a customer profile.
        operationId: createPaymentMethod
        consumes:
          - application/json
        produces:
          - application/json
        security:
          - oauth:
              - write
          - basic: []
        x-example:
          create-paymentmethod-example1:
            summary: Create Payment Method
            value:
              billTo:
                address1: 10 Ave 10 St.
                administrativeArea: WA
                company: Net
                country: US
                firstName: jim
                lastName: carry
                locality: Redmond
                phoneNumber: 425 555 6666
                postalCode: '98052'
              paymentInstrument:
                creditCard:
                  cardNumber: '41XXXXXXXXXXXXX'
                  expirationDate: 2020-12
          create-paymentmethod-example2:
            summary: Create and validate Payment Method
            value:
              billTo:
                address1: 11 Ave 11 St.
                administrativeArea: WA
                company: Net
                country: US
                firstName: east
                lastName: wood
                locality: Kirkland
                phoneNumber: 425 555 6666
                postalCode: '98007'
              paymentInstrument:
                creditCard:
                  cardNumber: '41XXXXXXXXXXXXX'
                  expirationDate: 2019-10
                validate: 'true'
        parameters:
          - name: customerId
            in: path
            type: string
            description: 'Unique identifier of the customer profile, from the original profile-creation response.'
            required: true
          - name: CreatePaymentMethod
            in: body
            description: This object creates a payment method associated with a payment profile.
            required: true
            schema:
              $ref: '#/definitions/CreatePaymentMethod'
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/paymentMethod'
            x-example: {}
          '404':
            description: PaymentMethod not created
            schema:
              $ref: '#/definitions/errorResponse'
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/errorResponse'
      get:
        tags:
          - customers-payment_methods
        summary: Get Customer Payment Methods
        description: Get a list of payment methods associated with a customer profile.
        operationId: getCustomerPaymentMethods
        security:
          - oauth:
              - write
          - basic: []
        x-example:
          getall-payment-methods-example1:
            summary: Get All Payment Methods Example1
            value:
              billTo:
                address1: 11 Ave 10 St.
                administrativeArea: WA
                company: Net
                country: US
                firstName: jim
                lastName: carry
                locality: Redmond
                phoneNumber: 425-555-6666
                postalCode: '98052'
              payment:
                creditCard:
                  cardNumber: '41XXXXXXXXXXXXX'
                  expirationDate: 2020-12
                validate: 'true'
        parameters:
          - name: customerId
            in: path
            type: string
            description: 'Unique identifier of the customer profile, returned in the response to the request that created the profile.'
            required: true
          - name: offset
            in: query
            type: integer
            required: false
            description: 'The number of the page to return results from. For example, if limit is set to 100, and offset is set to 2, the function will return 100 transactions starting with the transaction that would otherwise be the transaction numbered 101 in the result set. Accepted values are 1-100000.'
          - name: limit
            in: query
            type: integer
            required: false
            description: The number of transactions per page. Accepted values are 1-1000.
        produces:
          - application/json
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/paymentMethodCollection'
            x-example: {}
    '/v1/customers/{customerId}':
      get:
        tags:
          - customers-customers
        summary: Get A Customer
        description: Get the details of a single customer profile.
        operationId: getCustomer
        security:
          - oauth:
              - read
          - basic: []
        produces:
          - application/json
        parameters:
          - name: customerId
            in: path
            type: string
            description: 'Unique identifier of the customer profile, from the original profile-creation response.'
            required: true
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/Customer'
            x-example: {}
      delete:
        tags:
          - customers-customers
        summary: Delete a Customer Profile
        operationId: DeleteCustomer
        description: Deletes a customer profile.
        security:
          - oauth:
              - write
          - basic: []
        x-example:
          delete-customer-example1:
            summary: Delete Customer Example1
            value:
              description: Updated Test Customer100
              identifier:
                email: cus100@authorize.com
                reference: Customer100
        parameters:
          - name: customerId
            in: path
            type: string
            description: 'Unique identifier of the customer profile, from the original profile-creation response.'
            required: true
        produces:
          - application/json
        responses:
          '200':
            description: OK
            x-example: {}
      put:
        tags:
          - customers-customers
        summary: Update A Customer Profile
        description: Updates a customer profile.
        operationId: UpdateCustomer
        security:
          - oauth:
              - write
          - basic: []
        x-example:
          update-customer-example1:
            summary: Update Customer
            value:
              description: Updated Test Customer100
              identifier:
                email: cus100@authorize.com
                reference: Customer100
        consumes:
          - application/json
        produces:
          - application/json
        parameters:
          - name: customerId
            in: path
            type: string
            description: 'Unique identifier of the customer profile, from the original profile-creation response.'
            required: true
          - name: CreateCustomerAndPaymentMethod
            in: body
            description: Contains the updated information.
            required: true
            schema:
              $ref: '#/definitions/CreateCustomerAndPaymentMethod'
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/Customer'
            x-example: {}
          '404':
            description: Customer not updated
            schema:
              $ref: '#/definitions/errorResponse'
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/errorResponse'
    '/v1/customers/{customerId}/addresses/{addressId}':
      get:
        tags:
          - customers-addresses
        summary: Get A Customer Address
        description: Get a customer address.
        operationId: getCustomerAddress
        security:
          - oauth:
              - read
          - basic: []
        parameters:
          - name: customerId
            in: path
            type: string
            description: Unique identifier of the customer profile.
            required: true
          - name: addressId
            in: path
            type: string
            description: Unique identifier of the address.
            required: true
        produces:
          - application/json
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/address'
            x-example: {}
      delete:
        tags:
          - customers-addresses
        summary: Delete a Customer Address
        operationId: DeleteAddress
        description: Deletes an address associated with a customer profile.
        security:
          - oauth:
              - write
          - basic: []
        x-example:
          delete-customer-address-example1:
            summary: Delete Customer Address
            value:
              address1: 10 Ave 10 St.
              administrativeArea: WA
              company: Net
              country: US
              firstName: jim
              lastName: carry
              locality: Redmond
              phoneNumber: 425 555 6666
              postalCode: '98052'
        parameters:
          - name: customerId
            in: path
            type: string
            description: Unique identifier of the customer profile.
            required: true
          - name: addressId
            in: path
            type: string
            description: Unique identifier of the address.
            required: true
        produces:
          - application/json
        responses:
          '200':
            description: OK
            x-example: {}
      put:
        tags:
          - customers-addresses
        summary: Update A Customer Address
        description: Update an address associated with a customer profile.
        operationId: updateCustomerAddress
        security:
          - oauth:
              - write
          - basic: []
        x-example:
          update-customer-address-example1:
            summary: Update Customer Address
            value:
              address1: 11 Ave 10 St.
              administrativeArea: WA
              company: Net
              country: US
              firstName: jim
              lastName: carry
              locality: Redmond
              phoneNumber: 425 555 6666
              postalCode: '98052'
        consumes:
          - application/json
        produces:
          - application/json
        parameters:
          - name: customerId
            in: path
            type: string
            description: Unique identifier of the customer profile.
            required: true
          - name: addressId
            in: path
            type: string
            description: Unique identifier of the address.
            required: true
          - name: createCustomerAddress
            in: body
            description: Contains the address information.
            required: true
            schema:
              $ref: '#/definitions/CreateCustomerAddress'
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/address'
            x-example: {}
          '404':
            description: Address not updated
            schema:
              $ref: '#/definitions/errorResponse'
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/errorResponse'
    '/v1/customers/{customerId}/paymentmethods/{paymentMethodId}':
      get:
        tags:
          - customers-payment_methods
        summary: Get a Customer Payment Method
        description: Get the payment method for a sinlge customer profile.
        operationId: getCustomerPaymentMethod
        security:
          - oauth:
              - read
          - basic: []
        x-example:
          get-customer-paymentmethod-example1:
            summary: Get Customer Payment Method Example1
            value:
              billTo:
                address1: 11 Ave 10 St.
                administrativeArea: WA
                company: Net
                country: US
                firstName: jim
                lastName: carry
                locality: Redmond
                phoneNumber: 425 555 6666
                postalCode: '98052'
              payment:
                creditCard:
                  cardNumber: '41XXXXXXXXXXXXX'
                  expirationDate: 2020-12
                validate: 'true'
        parameters:
          - name: customerId
            in: path
            type: string
            description: Unique identifier of the customer profile.
            required: true
          - name: paymentMethodId
            in: path
            type: string
            description: Unique identifier of the payment method.
            required: true
        produces:
          - application/json
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/paymentMethod'
            x-example: {}
      delete:
        tags:
          - customers-payment_methods
        summary: Delete a Customer Payment Method
        operationId: DeletePaymentmethod
        description: Deletes a payment method from a payment profile.
        security:
          - oauth:
              - write
          - basic: []
        parameters:
          - name: customerId
            in: path
            type: string
            description: Unique identifier of the customer profile.
            required: true
          - name: paymentMethodId
            in: path
            type: string
            description: Unique identifier of the payment method.
            required: true
        produces:
          - application/json
        responses:
          '200':
            description: OK
            x-example: {}
      put:
        tags:
          - customers-payment_methods
        summary: Update a Customer Payment Method
        description: Update a payment method associated with a payment profile.
        operationId: UpdatePaymentMethod
        security:
          - oauth:
              - write
          - basic: []
        consumes:
          - application/json
        produces:
          - application/json
        parameters:
          - name: customerId
            in: path
            type: string
            description: Unique identifier of the customer profile.
            required: true
          - name: paymentMethodId
            in: path
            type: string
            description: Unique identifier of the payment method.
            required: true
          - name: createPaymentMethod
            in: body
            description: Contains the updated payment method information.
            required: true
            schema:
              $ref: '#/definitions/CreatePaymentMethod'
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/paymentMethod'
            x-example: {}
          '404':
            description: Payment Method not updated
            schema:
              $ref: '#/definitions/errorResponse'
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/errorResponse'
    /v1/payments/:
      get:
        tags:
          - payments-payments
        summary: Get a List of Payments
        description: Get a list of payment transactions.
        operationId: Get all Payments_
        produces:
          - application/json
        security:
          - oauth:
              - read
          - basic: []
        parameters:
          - name: offset
            in: query
            type: integer
            required: false
            description: '1-100000. The number of the page to return results from. For example, if limit is set to 100, and offset is set to 2, the function will return 100 transactions starting with the transaction that would otherwise be the transaction numbered 101 in the result set.'
          - name: limit
            in: query
            type: integer
            required: false
            description: 1-1000. The number of transactions per page.
          - name: batchId
            in: query
            type: string
            required: false
          - name: customerId
            in: query
            type: string
            required: false
          - name: unsettled
            in: query
            type: boolean
            required: false
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/paymentCollection'
            x-example:
              get-payment-example1:
                summary: Get All payments
                value:
                  _link:
                    self:
                      href: /rest/v1/payments?offset=0&limit=2
                      method: GET
                    next:
                      href: /rest/v1/payments?offset=2&limit=2
                      method: GET
                  _embedded:
                    payments:
                      - id: '2151095715'
                        submitTimeUTC: '0001-01-01T00:00:00Z'
                        status: SETTLED
                        _links:
                          self:
                            href: /rest/v1/payments/2151095715
                            method: GET
                      - id: '2148703924'
                        submitTimeUTC: '2012-12-29T04:19:34Z'
                        status: SETTLED
                        _links:
                          self:
                            href: /rest/v1/payments/2148703924
                            method: GET
                  totalTransactions: 126480
      post:
        tags:
          - payments-payments
        summary: Create a Payment Transaction
        description: 'Create a payment transaction. By default, this operation **authorizes and captures** the transaction. To only **authorize** it, set `paymentRequest.processingInformation.capture` to `false`.'
        operationId: createPayment
        security:
          - oauth:
              - write
          - basic: []
        x-example:
          create-payment-example1:
            summary: Charge using Credit Card
            value:
              clientReferenceInformation:
                code: C4454
              processingInformation:
                capture: true
                paymentSolution: PS1
                recurringBilling: false
              paymentInformation:
                card:
                  number: '41XXXXXXXXXXXXX'
                  expirationMonth: '12'
                  expirationYear: '2019'
                  type: Visa
                  securityCode: '123'
              orderInformation:
                amountDetails:
                  totalAmount: '14.35'
                  currency: USD
                  dutyAmount: '0.01'
                  taxAmount: '0.02'
                  freightAmount: '0.03'
                billTo:
                  address1: 123 Main St
                  administrativeArea: Lehi
                  company: Main Company
                  country: USA
                  firstName: Emily
                  lastName: Porter
                  locality: Locality
                  phoneNumber: 673-234-3454
                  postalCode: '51041'
                shipTo:
                  address1: 123 Little St
                  administrativeArea: Kansas
                  company: Main Company
                  country: USA
                  firstName: Emily
                  lastName: Smith
                  locality: Porter
                  phoneNumber: 673-234-3454
                  postalCode: '51041'
                lineItems:
                  - productCode: PCode
                    productName: Coffee
                    quantity: 1
                    unitPrice: '0.30'
                invoiceDetails:
                  purchaseOrderNumber: PO-456378
                  taxable: false
                description: Office Goods Invoice
          create-payment-example2:
            summary: Authorize Using Credit Card
            value:
              clientReferenceInformation:
                code: '1234'
              processingInformation:
                capture: false
                paymentSolution: string
                recurringBilling: false
              paymentInformation:
                card:
                  number: '41XXXXXXXXXXXXX'
                  expirationMonth: '12'
                  expirationYear: '2022'
                  type: Visa
                  securityCode: '123'
                validate: true
              orderInformation:
                amountDetails:
                  totalAmount: '11.35'
                  currency: USD
                  dutyAmount: '0.01'
                  taxAmount: '0.02'
                  freightAmount: '0.03'
                billTo:
                  address1: 123 Main St
                  administrativeArea: Lehi
                  company: Main Company
                  country: USA
                  firstName: John
                  lastName: Smith
                  locality: Locality
                  phoneNumber: 123-234-3454
                  postalCode: '78045'
                shipTo:
                  address1: 123 Main St
                  administrativeArea: Lehi
                  company: Main Company
                  country: USA
                  firstName: John
                  lastName: Smith
                  locality: Locality
                  phoneNumber: 123-234-3454
                  postalCode: '78045'
                lineItems:
                  - productCode: PCode1
                    productName: Green Keychains
                    quantity: 1
                    unitPrice: '0.30'
                invoiceDetails:
                  purchaseOrderNumber: PO-456378
                  taxable: true
                description: KeyChains Invoice
          create-payment-example3:
            summary: Auth Capture using Bank Account
            value:
              processingInformation:
                capture: true
              paymentInformation:
                bankAccount:
                  accountType: Checking
                  routingNumber: 'XXXXXX'
                  accountNumber: '123XXXXXXXXXXXX456'
                  nameOnAccount: string
                  eCheckType: PPD
                  bankName: string
                  checkNumber: string
              orderInformation:
                amountDetails:
                  totalAmount: '9.2'
                  dutyAmount: 01.00
                  taxAmount: 03.00
                billTo:
                  address1: ewwe
                  administrativeArea: TX
                  company: Souveniropolis
                  country: USA
                  firstName: Ellen
                  lastName: Johnson
                  locality: Pecan Springs
                  postalCode: '44628'
                shipTo:
                  address1: ewwe
                  administrativeArea: TX
                  company: Souveniropolis
                  country: USA
                  firstName: Ellen
                  lastName: Johnson
                  locality: Pecan Springs
                  postalCode: '44628'
                invoiceDetails:
                  purchaseOrderNumber: INV-12347
          create-payment-example4:
            summary: Auth Capture using customer profile
            value:
              processingInformation:
                capture: true
              paymentInformation:
                customer:
                  customerId: '40195947'
                  paymentMethodId: '40212792'
              orderInformation:
                amountDetails:
                  totalAmount: '11.33'
                  currency: USD
                  dutyAmount: '0.13'
                  taxAmount: '2.30'
                  freightAmount: '1.21'
                lineItems:
                  - productCode: CodePC1
                    productName: NamePD2
                    quantity: 1
                    unitPrice: '1'
                invoiceDetails:
                  purchaseOrderNumber: PO-2231
                  taxable: false
                description: Payment Using Customer Profile
          create-payment-example5:
            summary: Auth Capture using tokenized credit card
            value:
              clientReferenceInformation:
                code: C4454
              processingInformation:
                capture: true
                paymentSolution: PS1
                recurringBilling: false
              paymentInformation:
                tokenizedCard:
                  number: 'XXXXXXXXXXXXXXXXX'
                  expirationMonth: '04'
                  expirationYear: '2019'
                  cryptogram: ODA4LjAx
              orderInformation:
                amountDetails:
                  totalAmount: '14.35'
                  currency: USD
                  dutyAmount: '0.01'
                  taxAmount: '0.02'
                  freightAmount: '0.03'
                billTo:
                  address1: 123 Main St
                  administrativeArea: Lehi
                  company: Main Company
                  country: USA
                  firstName: Emily
                  lastName: Porter
                  locality: Locality
                  phoneNumber: 673-234-3454
                  postalCode: '51041'
                shipTo:
                  address1: 123 Little St
                  administrativeArea: Kansas
                  company: Main Company
                  country: USA
                  firstName: Emily
                  lastName: Smith
                  locality: Porter
                  phoneNumber: 673-234-3454
                  postalCode: '51041'
                lineItems:
                  - productCode: PCode
                    productName: Coffee
                    quantity: 1
                    unitPrice: '0.30'
                invoiceDetails:
                  purchaseOrderNumber: PO-111378
                  taxable: false
                description: Office Goods Invoice
          create-payment-example6:
            summary: Auth Capture using fluid data
            value:
              clientReferenceInformation:
                code: C44014
              processingInformation:
                capture: true
                paymentSolution: PS11
                recurringBilling: false
              paymentInformation:
                fluidData:
                  key: null
                  descriptor: COMMON.ACCEPT.INAPP.PAYMENT
                  value: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
              orderInformation:
                amountDetails:
                  totalAmount: '17.35'
                  currency: USD
                  dutyAmount: '0.01'
                  taxAmount: '0.02'
                  freightAmount: '0.03'
                billTo:
                  address1: 123 Main St
                  administrativeArea: Lehi
                  company: Main Company
                  country: USA
                  firstName: Emily
                  lastName: Porter
                  locality: Locality
                  phoneNumber: 673-234-3454
                  postalCode: '51041'
                shipTo:
                  address1: 123 Little St
                  administrativeArea: Kansas
                  company: Main Company
                  country: USA
                  firstName: Emily
                  lastName: Smith
                  locality: Porter
                  phoneNumber: 673-234-3454
                  postalCode: '51041'
                lineItems:
                  - productCode: PCode
                    productName: Coffee
                    quantity: 1
                    unitPrice: '0.30'
                invoiceDetails:
                  purchaseOrderNumber: PO-450078
                  taxable: false
                description: Book Store Invoice
        parameters:
          - name: PaymentRequest
            in: body
            required: true
            schema:
              $ref: '#/definitions/paymentRequest'
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/payment'
            x-example:
              create-payment-response1:
                summary: Charge using Credit Card Response
                value:
                  _links:
                    self:
                      href: /rest/v1/payments/2156607907
                      method: GET
                    refund:
                      href: /rest/v1/payments/2156607907/refunds
                      method: POST
                  id: '2156607907'
                  status: CAPTURED
                  clientReferenceInformation:
                    code: C4454
                  processorInformation:
                    approvalCode: Z58NBF
                    avs:
                      code: 'Y'
                  submitTimeUTC: '2018-08-21T22:11:56Z'
                  orderInformation:
                    amountDetails:
                      totalAmount: '14.35'
                      currency: USD
                      dutyAmount: '0.01'
                      taxAmount: '0.02'
                      freightAmount: '0.03'
                      authorizedAmount: '14.35'
                    billTo:
                      address1: 123 Main St
                      administrativeArea: Lehi
                      company: Main Company
                      country: USA
                      firstName: Emily
                      lastName: Porter
                      locality: Locality
                      postalCode: '51041'
                    shipTo:
                      address1: 123 Little St
                      administrativeArea: Kansas
                      company: Main Company
                      country: USA
                      firstName: Emily
                      lastName: Smith
                      locality: Porter
                      postalCode: '51041'
                    lineItems:
                      - productCode: PCode
                        productName: Coffee
                        quantity: 1
                        unitPrice: '0.30'
                    invoiceDetails:
                      purchaseOrderNumber: PO-456378
                    description: Office Goods Invoice
                  paymentInformation:
                    card:
                      number: XXXX1111
                      expirationMonth: XX
                      expirationYear: XXXX
                      type: Visa
          '500':
            description: Internal Server Error
            schema:
              $ref: '#/definitions/errorResponse'
    '/v1/payments/{paymentId}':
      get:
        tags:
          - payments-payments
        summary: Get the Details of a Payment Transaction
        description: Get the details of a payment transaction.
        operationId: getPayment
        security:
          - oauth:
              - read
          - basic: []
        parameters:
          - name: paymentId
            in: path
            type: string
            required: true
            description: The unique identifier of the payment. Returned in the original transaction response.
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/payment'
            x-example: {}
          '404':
            description: Payment Not Found
            schema:
              $ref: '#/definitions/errorResponse'
          '500':
            description: Internal Server Error
            schema:
              $ref: '#/definitions/errorResponse'
    '/v1/payments/{paymentId}/captures':
      post:
        tags:
          - payments-captures
        summary: Cature a Payment Transaction
        description: Capture an authorization that was processed through Authorize.Net.
        operationId: capturePayment
        security:
          - oauth:
              - write
          - basic: []
        x-example:
          capture-payment-example1:
            summary: Capture a previously authorized amount
            value:
              orderInformation:
                amountDetails:
                  totalAmount: '11.35'
                  currency: USD
                  dutyAmount: '0.01'
                  taxAmount: '0.02'
                  freightAmount: '0.03'
                billTo:
                  address1: 123 Main St
                  administrativeArea: Lehi
                  company: Main Company
                  country: USA
                  firstName: John
                  lastName: Smith
                  locality: Locality
                  postalCode: '78045'
                shipTo:
                  address1: 123 Main St
                  administrativeArea: Lehi
                  company: Main Company
                  country: USA
                  firstName: John
                  lastName: Smith
                  locality: Locality
                  postalCode: '78045'
                lineItems:
                  - productCode: PCode1
                    productName: Green Keychains
                    quantity: 1
                    unitPrice: '0.30'
                invoiceDetails:
                  purchaseOrderNumber: PO-456378
                description: KeyChains Invoice
        parameters:
          - name: paymentId
            in: path
            type: string
            required: true
            description: The unique identifier of the authorization that you are capturing. The ID is returned in the original transaction response.
          - name: captureRequest
            in: body
            required: true
            schema:
              $ref: '#/definitions/captureRequest'
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/payment'
            x-example: {}
          '404':
            description: Payment Not Found
            schema:
              $ref: '#/definitions/errorResponse'
          '500':
            description: Internal Server Error
            schema:
              $ref: '#/definitions/errorResponse'
    '/v1/payments/{paymentId}/refunds':
      post:
        tags:
          - payments-refunds
        summary: Refund a Payment Transaction
        description: 'Refund a previously captured payment transaction by referencing its ID. To credit your customer''s account without referencing a previous transaction, use `/credits` instead'
        operationId: refundPayment
        security:
          - oauth:
              - write
          - basic: []
        x-example:
          refund-payment-example1:
            summary: Refund using Bank Account
            value:
              paymentInformation:
                bankAccount:
                  accountType: BUSINESSCHECKING
                  routingNumber: 011301798
                  accountNumber: '0101'
                  nameOnAccount: John Doe
                  eCheckType: CCD
                  bankName: First Bank Of Authorize.Net
                  checkNumber: '1324453'
              orderInformation:
                amountDetails:
                  totalAmount: '6.00'
                  currency: USD
                  dutyAmount: '0.75'
                  taxAmount: '0.65'
                  freightAmount: '0.66'
        parameters:
          - name: paymentId
            in: path
            type: string
            required: true
            description: Unique identifier of the payment transaction that you are refunding. The ID is returned in the original transaction reponse.
          - name: refundRequest
            in: body
            required: true
            schema:
              $ref: '#/definitions/refundRequest'
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/payment'
            x-example: {}
          '404':
            description: Payment Not Found
            schema:
              $ref: '#/definitions/errorResponse'
          '500':
            description: Internal Server Error
            schema:
              $ref: '#/definitions/errorResponse'
    /v1/credits/:
      post:
        tags:
          - credits
        summary: Process a Credit Transaction
        description: 'Create a credit transaction that is not related to a previous transaction. To refund a previous transaction, use `/payments/{paymentId}/refunds` instead.'
        operationId: createCredit
        security:
          - oauth:
              - write
          - basic: []
        x-example:
          credit-example1:
            summary: Credits Request using CC
            value:
              paymentInformation:
                card:
                  number: 'XXXXXXXXXXXXXXXX'
                  expirationMonth: '07'
                  expirationYear: '2028'
              orderInformation:
                amountDetails:
                  totalAmount: '9.58'
                  currency: USD
        parameters:
          - name: Authorization
            in: header
            type: string
            required: true
            description: The value to provide in the Authorization header of ANET API request
          - name: creditRequest
            in: body
            required: true
            schema:
              $ref: '#/definitions/creditRequest'
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/payment'
            x-example: {}
          '500':
            description: Internal Server Error
            schema:
              $ref: '#/definitions/errorResponse'
    /v1/eventtypes:
      get:
        tags:
          - webhooks-event_types
        summary: Get a List of All Event Types
        description: Returns a list of all Webhooks event types that you can enroll in.
        operationId: getEventTypes
        security:
          - oauth:
              - read
          - basic: []
        responses:
          '200':
            description: OK
            schema:
              type: array
              items:
                $ref: '#/definitions/EventType'
            x-example: {}
          '500':
            description: System Error.
            schema:
              $ref: '#/definitions/errorResponse'
          default:
            description: Unexpected Error.
            schema:
              $ref: '#/definitions/errorResponse'
    /v1/webhooks:
      get:
        tags:
          - webhooks-webhooks
        summary: List My Webhooks
        description: Retrieve details of all existing Webhooks for this account.
        operationId: getWebhooks
        security:
          - oauth:
              - read
          - basic: []
        responses:
          '200':
            description: OK
            schema:
              type: array
              items:
                $ref: '#/definitions/GetWebhookResponse'
            x-example: {}
          '500':
            description: System Error.
            schema:
              $ref: '#/definitions/errorResponse'
          default:
            description: Unexpected Error.
            schema:
              $ref: '#/definitions/errorResponse'
      post:
        tags:
          - webhooks-webhooks
        summary: Create A Webhook
        description: Enroll in one or more type of event notification.
        operationId: createWebhook
        security:
          - oauth:
              - read
          - basic: []
        x-example:
          create-webhook-example1:
            summary: Create Webhook
            value:
              url: 'http://requestb.in/1ierf8i1'
              eventTypes:
                - net.authorize.payment.authorization.created
                - net.authorize.payment.priorAuthCapture.created
                - net.authorize.payment.authcapture.created
              status: active
        parameters:
          - name: createWebhookBody
            in: body
            description: The payload which contains the details for enrolling in one or more webhooks.
            required: true
            schema:
              $ref: '#/definitions/CreateWebhookBody'
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/GetWebhookResponse'
            x-example: {}
          '400':
            description: Invalid/Missing Data or Limit Reached
            schema:
              $ref: '#/definitions/errorResponse'
          '500':
            description: System Error.
            schema:
              $ref: '#/definitions/errorResponse'
          default:
            description: Unexpected Error.
            schema:
              $ref: '#/definitions/errorResponse'
    '/v1/webhooks/{webhookId}':
      get:
        tags:
          - webhooks-webhooks
        summary: Get a Webhook
        description: Retrieve THE details of an existing Webhook.
        operationId: getWebhook
        security:
          - oauth:
              - read
          - basic: []
        parameters:
          - name: webhookId
            in: path
            description: Unique identifier of the webhook. The identifier was sent in the response to the webhook request.
            required: true
            type: string
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/GetWebhookResponse'
            x-example: {}
          '404':
            description: Not Found
            schema:
              $ref: '#/definitions/errorResponse'
          '500':
            description: System Error.
            schema:
              $ref: '#/definitions/errorResponse'
          default:
            description: Unexpected Error.
            schema:
              $ref: '#/definitions/errorResponse'
      put:
        tags:
          - webhooks-webhooks
        summary: Update A Webhook
        description: Update the details of an existing webhook.
        operationId: updateWebhook
        security:
          - oauth:
              - read
          - basic: []
        x-example:
          update-webhook-example1:
            summary: Update Webhook
            value:
              status: inactive
              url: 'http://requestb.in/1msxl041'
              eventTypes:
                - net.authorize.payment.authorization.created
        parameters:
          - name: webhookId
            in: path
            description: Unique identifier of the webhook. The identifier was sent in the response to the webhook request.
            required: true
            type: string
          - name: updateWebhookBody
            in: body
            description: Contains the details to be updated.
            required: true
            schema:
              $ref: '#/definitions/CreateWebhookBody'
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/GetWebhookResponse'
            x-example: {}
          '400':
            description: Invalid/Missing Data or Limit Reached
            schema:
              $ref: '#/definitions/errorResponse'
          '404':
            description: Not Found
            schema:
              $ref: '#/definitions/errorResponse'
          '500':
            description: System Error.
            schema:
              $ref: '#/definitions/errorResponse'
          default:
            description: Unexpected Error.
            schema:
              $ref: '#/definitions/errorResponse'
      delete:
        tags:
          - webhooks-webhooks
        summary: Delete A Webhook
        description: Delete an existing Webhook.
        operationId: deleteWebhook
        security:
          - oauth:
              - read
          - basic: []
        x-example:
          delete-webhook-example1:
            summary: Delete Webhook Example1
            value:
              eventType:
                - payment.authorization.created
                - payment.capture.created
              url: 'https://mysite/callback'
              status: active
        parameters:
          - name: webhookId
            in: path
            description: Unique identifier of the webhook. The identifier was sent in the response to the webhook request.
            required: true
            type: string
        responses:
          '200':
            description: OK
            x-example: {}
          '400':
            description: 'Invalid Data '
            schema:
              $ref: '#/definitions/errorResponse'
          '404':
            description: Not Found
            schema:
              $ref: '#/definitions/errorResponse'
          '500':
            description: System Error.
            schema:
              $ref: '#/definitions/errorResponse'
          default:
            description: Unexpected Error.
            schema:
              $ref: '#/definitions/errorResponse'
    '/v1/webhooks/{webhookId}/pings':
      post:
        tags:
          - webhooks-pings
        summary: Ping A Webhook
        description: 'A test event is sent to the Webhook endpoint, in an inactive state.'
        operationId: pingsWebhook
        security:
          - oauth:
              - read
          - basic: []
        parameters:
          - name: webhookId
            in: path
            description: Unique identifier of the webhook. The identifier was sent in the response to the webhook request.
            required: true
            type: string
        responses:
          '200':
            description: OK
            x-example: {}
          '404':
            description: Not Found
            schema:
              $ref: '#/definitions/errorResponse'
          '500':
            description: System Error.
            schema:
              $ref: '#/definitions/errorResponse'
          default:
            description: Unexpected Error.
            schema:
              $ref: '#/definitions/errorResponse'
    /v1/notifications:
      parameters:
        - name: deliveryStatus
          in: query
          type: string
          description: Filter by delivery status. Status include the following./n/n* Delivered/n/n* Failed
        - name: from_date
          in: query
          type: string
          description: 'Only includes notifications after the specified date, in YYYY-MM-DD format.'
        - name: to_date
          in: query
          type: string
          description: 'Only includes notifications before specified date, in YYYY-MM-DD format.'
        - name: offset
          in: query
          type: integer
          description: 'The number of the page to return results from. For example, if limit is set to 100, and offset is set to 2, the function will return 100 transactions, beginning with the transaction that would otherwise be the transaction numbered 101 in the result set. Accepted values are 1-100000.'
        - name: limit
          in: query
          type: integer
          description: The number of transactions per page. Accepted values are 1-1000.
      get:
        tags:
          - webhooks-notifications
        summary: Get Notification History
        description: Retreives the history of notifications for this account.
        operationId: getNotifications
        security:
          - oauth:
              - read
          - basic: []
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/GetNotificationsResponse'
          '500':
            description: System Error.
            schema:
              $ref: '#/definitions/errorResponse'
          default:
            description: Unexpected Error.
            schema:
              $ref: '#/definitions/errorResponse'
    '/v1/notifications/{notificationsId}':
      get:
        tags:
          - webhooks-notifications
        summary: Get a Notification
        description: Retreives the details of a single notification.
        operationId: getNotification
        security:
          - oauth:
              - read
          - basic: []
        parameters:
          - name: notificationsId
            in: path
            description: Unique identifier of the notification. The identifier was sent in the original notification.
            required: true
            type: string
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/GetNotificationResponse'
          '404':
            description: Not Found
            schema:
              $ref: '#/definitions/errorResponse'
          '500':
            description: System Error.
            schema:
              $ref: '#/definitions/errorResponse'
          default:
            description: Unexpected Error.
            schema:
              $ref: '#/definitions/errorResponse'
    /v1/paymentTransactions/chargeaCreditCard:
      post:
        tags:
          - paymentTransaction-transaction
        summary: Charge a Credit Card.
        description: Use this method to authorize and capture a credit card payment.
        operationId: createTransactionRequest
        produces:
            - application/json
        security:
            - oauth:
                - write
            - basic: []
        parameters:
            - name: chargeaCreditCard
              in: body
              schema:
                $ref: '#/definitions/createTransactionRequestForChargeACreditCard'
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/transaction'
            x-example: {}
          '404':
            description: Address not created
            schema:
              $ref: '#/definitions/errorResponse'
          '500':
            description: System Error.
            schema:
              $ref: '#/definitions/errorResponse'    
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/errorResponse'
    /v1/paymentTransactions/authorizeCreditCard: 
      post:
        tags:
          - paymentTransaction-transaction
        summary: Authorize a Credit Card.
        description: Use this method to authorize a credit card payment. To actually charge the funds you will need to follow up with a capture transaction.
        produces:
            - application/json
        security:
            - oauth:
                - write
            - basic: []
        parameters:
            - name: authorizeCreditCard
              in: body
              schema:
                $ref: '#/definitions/createTransactionRequestForChargeACreditCard'
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/chargeATokenizedCreditCardResponse'
            x-example: {}
          '404':
            description: Address not created
            schema:
              $ref: '#/definitions/errorResponse'
          '500':
            description: System Error.
            schema:
              $ref: '#/definitions/errorResponse'    
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/errorResponse'   
    /v1/paymentTransactions/capturePreviousAuthorizedAmount: 
     post:
        tags:
          - paymentTransaction-transaction
        summary: Capture Previous Authorized Amount.
        description: Use this method to capture funds reserved with a previous authOnlyTransaction transaction request.
        produces:
            - application/json
        security:
            - oauth:
                - write
            - basic: []
        parameters:
            - name: createCapturePreviousAuthorizedAmount
              in: body
              schema:
                $ref: '#/definitions/createCapturePreviousAuthorizedAmount'
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/transactionForPayments'
            x-example: {}
          '404':
            description: Address not created
            schema:
              $ref: '#/definitions/errorResponse'
          '500':
            description: System Error.
            schema:
              $ref: '#/definitions/errorResponse'    
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/errorResponse'          
    /v1/paymentTransactions/captureFundsAuthorizedThroughAnotherChannel:
     post:
        tags:
          - paymentTransaction-transaction
        summary: Capture Funds Authorized Through Another Channel.
        description: Use this method to capture funds which have been authorized through another channel, such as phone authorization. If you need to capture an authorizeOnlyTransaction, use priorAuthCaptureTransaction instead.
        produces:
            - application/json
        security:
            - oauth:
                - write
            - basic: []
        parameters:
            - name: createCaptureFundsAuthorizedThroughAnotherChannel
              in: body
              schema:
                $ref: '#/definitions/createCaptureFundsAuthorizedThroughAnotherChannel'
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/transactionForPayments'
            x-example: {}
          '404':
            description: Address not created
            schema:
              $ref: '#/definitions/errorResponse'
          '500':
            description: System Error.
            schema:
              $ref: '#/definitions/errorResponse'    
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/errorResponse'
    /v1/paymentTransactions/refundTransaction: 
     post:
        tags:
          - paymentTransaction-transaction
        summary: Refund A Transaction.
        description: This transaction type is used to refund a customer for a transaction that was successfully settled through the payment gateway. Note that credit card information and bank account information are mutually exclusive, so you should not submit both.
        produces:
            - application/json
        security:
            - oauth:
                - write
            - basic: []
        parameters:
            - name: refundTransaction
              in: body
              schema:
                $ref: '#/definitions/createRefundTransaction'
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/transactionForPayments'
            x-example: {}
          '404':
            description: Address not created
            schema:
              $ref: '#/definitions/errorResponse'
          '500':
            description: System Error.
            schema:
              $ref: '#/definitions/errorResponse'    
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/errorResponse'
    /v1/paymentTransactions/voidATransaction: 
     post:
        tags:
          - paymentTransaction-transaction
        summary: Void A Transaction.
        description: This transaction type can be used to cancel either an original transaction that is not yet settled or an entire order composed of more than one transaction. A Void prevents the transaction or the order from being sent for settlement. A Void can be submitted against any other transaction type
        produces:
            - application/json
        security:
            - oauth:
                - write
            - basic: []
        parameters:
            - name: voidATransaction
              in: body
              schema:
                $ref: '#/definitions/createVoidTransaction'
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/transactionForPayments'
            x-example: {}
          '404':
            description: Address not created
            schema:
              $ref: '#/definitions/errorResponse'
          '500':
            description: System Error.
            schema:
              $ref: '#/definitions/errorResponse'    
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/errorResponse'
    /v1/paymentTransactions/updateSplitTenderGroup:
     put:
        tags:
          - paymentTransaction-transaction
        summary: Update Split Tender Group.
        description: Use this function to update the status of an existing order that contains multiple transactions with the same splitTenderId value.
        produces:
            - application/json
        security:
            - oauth:
                - write
            - basic: []
        parameters:
          - name: merchantAuthentication
            in: query
            type: string
            description: 'Contains merchant authentication information.'
            required: true
          - name: name
            in: query
            type: string
            description: 'Merchant’s unique API Login ID.'
            required: true
          - name: transactionKey
            in: query
            type: string
            description: 'Merchant’s unique Transaction Key.'
            required: true
          - name: refId
            in: query
            type: string
            description: 'Merchant-assigned reference ID for the request.'
            required: false
          - name: splitTenderId
            in: query
            type: string
            description: 'Payment gateway-assigned number associated with the order.'
            required: true
          - name: splitTenderStatus
            in: query
            type: string
            description: 'Indicates the status of all transactions associated with the order.'
            required: false  
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/updateSplitTenderGroupResponse'
            x-example: {}
          '404':
            description: Address not updated
            schema:
              $ref: '#/definitions/errorResponse'
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/errorResponse'
    /v1/paymentTransactions/debitABankAccount: 
      post:
        tags:
          - paymentTransaction-transaction
        summary: Debit A Bank Account.
        description: Use this method to process an ACH debit transaction using bank account details.
        produces:
            - application/json
        security:
            - oauth:
                - write
            - basic: []
        parameters:
            - name: createDebitABankAccount
              in: body
              schema:
                $ref: '#/definitions/createDebitABankAccount'
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/transactionForPayments'
            x-example: {}
          '404':
            description: Address not created
            schema:
              $ref: '#/definitions/errorResponse'
          '500':
            description: System Error.
            schema:
              $ref: '#/definitions/errorResponse'    
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/errorResponse'
    /v1/paymentTransactions/creditABankAccount: 
      post:
        tags:
          - paymentTransaction-transaction
        summary: Credit A Bank Account.
        description: This transaction type is used to refund a customer using a bank account credit transaction.
        produces:
            - application/json
        security:
            - oauth:
                - write
            - basic: []
        parameters:
            - name: creditABankAccount
              in: body
              schema:
                $ref: '#/definitions/createCreditABankAccount'
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/creditABankAccountResponse'
            x-example: {}
          '404':
            description: Address not created
            schema:
              $ref: '#/definitions/errorResponse'
          '500':
            description: System Error.
            schema:
              $ref: '#/definitions/errorResponse'    
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/errorResponse'
    /v1/paymentTransactions/chargeACustomerProfile: 
      post:
        tags:
          - paymentTransaction-transaction
        summary: charge a Customer Profile.
        description: Use this method to authorize and capture a payment using a stored customer payment profile.
        produces:
            - application/json
        security:
            - oauth:
                - write
            - basic: []
        parameters:
            - name: ChargeACustomerProfile
              in: body
              schema:
                $ref: '#/definitions/chargeACustomerProfile'
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/chargeACustomerProfileResponse'
            x-example: {}
          '404':
            description: Address not created
            schema:
              $ref: '#/definitions/errorResponse'
          '500':
            description: System Error.
            schema:
              $ref: '#/definitions/errorResponse'    
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/errorResponse' 
    /v1/paymentTransactions/chargeATokenizedCreditCard:
      post:
        tags:
          - paymentTransaction-transaction
        summary: Charge A Tokenized Credit Card.
        description: Use this method to authorize and capture a payment using a tokenized credit card number issued by a certified token provider. The payment processor must support payment network tokenization, and you must pass in your request the token, the expiration date, and the cryptogram receied from the token provider.
        produces:
            - application/json
        security:
            - oauth:
                - write
            - basic: []
        parameters:
            - name: chargeATokenizedCreditCard
              in: body
              schema:
                $ref: '#/definitions/chargeATokenizedCreditCard'
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/chargeATokenizedCreditCardResponse'
            x-example: {}
          '404':
            description: Address not created
            schema:
              $ref: '#/definitions/errorResponse'
          '500':
            description: System Error.
            schema:
              $ref: '#/definitions/errorResponse'    
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/errorResponse'
    /v1/mobileInAppTransctions/createAnApplePayTransaction:
      post:
        tags:
          - mobileInAppTransactions
        summary: Create An Apple Pay Transaction.
        description: Use this function to create an Authorize.net payment transaction request using Apple Pay data in place of card data.
        produces:
            - application/json
        security:
            - oauth:
                - write
            - basic: []
        parameters:
            - name: createAnApplePayTransaction
              in: body
              schema:
                $ref: '#/definitions/createTransactionRequestForAnApplePayTransaction'
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/createMobileInAppTransactionResponce'
            x-example: {}
          '404':
            description: Address not created
            schema:
              $ref: '#/definitions/errorResponse'
          '500':
            description: System Error.
            schema:
              $ref: '#/definitions/errorResponse'    
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/errorResponse'
    /v1/mobileInAppTransctions/createAnGooglePayTransaction:
      post:
        tags:
          - mobileInAppTransactions
        summary: Create An Google Pay Transaction.
        description: Use this function to create an Authorize.net payment transaction request using Google Pay data in place of card data.
        produces:
            - application/json
        security:
            - oauth:
                - write
            - basic: []
        parameters:
            - name: createAnGooglePayTransaction
              in: body
              schema:
                $ref: '#/definitions/createTransactionRequestForAnApplePayTransaction'
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/createMobileInAppTransactionResponce'
            x-example: {}
          '404':
            description: Address not created
            schema:
              $ref: '#/definitions/errorResponse'
          '500':
            description: System Error.
            schema:
              $ref: '#/definitions/errorResponse'    
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/errorResponse'
    /v1/payPalExpressCheckout/authorizationOnly:
      post:
        tags:
          - payPalExpressCheckout
        summary: Authorization Only.
        description: An Authorization Only request notifies PayPal that an authorization has been initiated but does not complete the authorization. It returns a secure URL with a token appended to it. The purpose of this token is to identify the transaction when the customer is redirected to PayPal.
        produces:
            - application/json
        security:
            - oauth:
                - write
            - basic: []
        parameters:
            - name: createAuthorizationOnlyTransaction
              in: body
              schema:
                $ref: '#/definitions/createAuthorizationOnlyTransaction'
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/createPayPalAuthorizeOnlyTransactionResponce'
            x-example: {}
          '404':
            description: Address not created
            schema:
              $ref: '#/definitions/errorResponse'
          '500':
            description: System Error.
            schema:
              $ref: '#/definitions/errorResponse'    
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/errorResponse'
    /v1/payPalExpressCheckout/authorizationAndCapture:
      post:
        tags:
          - payPalExpressCheckout
        summary: Authorization And Capture.
        description: This type of transaction is the most common and is the default payment gateway transaction type. Like the Authorization Only request, it notifies PayPal that an Authorization and Capture transaction has been initiated, but does not complete the request. It also returns a secure URL with a token appended to it. The purpose of this token is to identify the transaction when the customer is redirected to PayPal.
        produces:
            - application/json
        security:
            - oauth:
                - write
            - basic: []
        parameters:
            - name: createAuthorizationAndCaptureTransaction
              in: body
              schema:
                $ref: '#/definitions/createAuthorizationAndCaptureTransaction'
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/createPayPalForAuthorizeAndCaptureTransactionResponc'
            x-example: {}
          '404':
            description: Address not created
            schema:
              $ref: '#/definitions/errorResponse'
          '500':
            description: System Error.
            schema:
              $ref: '#/definitions/errorResponse'    
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/errorResponse'
    /v1/payPalExpressCheckout/getDetails:
      get:
        tags:
          - payPalExpressCheckout
        summary: Get a Details.
        description: A Get Details transaction returns customer’s PayPal Payer ID and shipping information.
        operationId: getDetails
        security:
          - oauth:
              - read
          - basic: []
        parameters:
          - name: merchantAuthentication
            in: query
            type: string
            required: true
            description: 'Contains merchant authentication information.'
          - name: name
            in: query
            type: string
            required: true
            description: 'Merchant’s unique API Login ID.'
          - name: transactionKey
            in: query
            type: string
            required: true
            description: 'Merchant’s unique Transaction Key.'
          - name: refId
            in: query
            type: string
            required: false
            description: 'Merchant-assigned reference ID for the request.'
          - name: transactionRequest
            in: query
            type: string
            required: false
          - name: transactionType
            in: query
            type: string
            required: false
            description: 'Contains merchant authentication information.'
          - name: refTransId
            in: query
            type: string
            required: false
            description: 'The ID of the original transaction from which you are pulling the Payer ID and shipping information.'
        produces:
          - application/json
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/createGetDetailsResponce'
            x-example: {}
          '404':
            description: Address not created
            schema:
              $ref: '#/definitions/errorResponse'
          '500':
            description: System Error.
            schema:
              $ref: '#/definitions/errorResponse'    
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/errorResponse'
    /v1/payPalExpressCheckout/authorizationOnlyContinue:
      post:
        tags:
          - payPalExpressCheckout
        summary: Authorization Only Continue.
        description: This request, if successful, actually authorizes the transaction but does not capture it.
        produces:
            - application/json
        security:
            - oauth:
                - write
            - basic: []
        parameters:
            - name: createAuthorizationOnlyContinueTransaction
              in: body
              schema:
                $ref: '#/definitions/createAuthorizationOnlyContinueTransaction'
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/createGetDetailsResponce'
            x-example: {}
          '404':
            description: Address not created
            schema:
              $ref: '#/definitions/errorResponse'
          '500':
            description: System Error.
            schema:
              $ref: '#/definitions/errorResponse'    
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/errorResponse'
    /v1/payPalExpressCheckout/priorAuthorizationCapture:
      post:
        tags:
          - payPalExpressCheckout
        summary: Prior Authorization Capture.
        description: This transaction type is used to capture an Authorization Only, Continued transaction that was successfully authorized through the payment gateway.
        produces:
            - application/json
        security:
            - oauth:
                - write
            - basic: []
        parameters:
            - name: createPriorAuthorizationCaptureTransaction
              in: body
              schema:
                $ref: '#/definitions/createPriorAuthorizationCaptureTransaction'
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/createGetDetailsResponce'
            x-example: {}
          '404':
            description: Address not created
            schema:
              $ref: '#/definitions/errorResponse'
          '500':
            description: System Error.
            schema:
              $ref: '#/definitions/errorResponse'    
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/errorResponse'
    /v1/payPalExpressCheckout/authorizationAndCaptureContinue:
      post:
        tags:
          - payPalExpressCheckout
        summary: Authorization And Capture Continue.
        description: This request actually authorizes and captures the transaction.
        produces:
            - application/json
        security:
            - oauth:
                - write
            - basic: []
        parameters:
            - name: createAuthorizationAndCaptureContinue
              in: body
              schema:
                $ref: '#/definitions/createAuthorizationAndCaptureContinue'
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/createGetDetailsResponce'
            x-example: {}
          '404':
            description: Address not created
            schema:
              $ref: '#/definitions/errorResponse'
          '500':
            description: System Error.
            schema:
              $ref: '#/definitions/errorResponse'    
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/errorResponse' 
    /v1/payPalExpressCheckout/void:
      post:
        tags:
          - payPalExpressCheckout
        summary: Void
        description: This transaction type can be used to cancel an authorization that has not yet been captured. Void can be used only in the following sequence- Authorization Only > Authorization Only, Continued > Void.
        produces:
            - application/json
        security:
            - oauth:
                - write
            - basic: []
        parameters:
            - name: createVoidPayPalExpressCheckOutTransaction
              in: body
              schema:
                $ref: '#/definitions/createVoidPayPalExpressCheckOutTransaction'
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/transactionForPayments'
            x-example: {}
          '404':
            description: Address not created
            schema:
              $ref: '#/definitions/errorResponse'
          '500':
            description: System Error.
            schema:
              $ref: '#/definitions/errorResponse'    
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/errorResponse'
    /v1/payPalExpressCheckout/credit:
      post:
        tags:
          - payPalExpressCheckout
        summary: Credit.
        description: This transaction type can be used to cancel an authorization that has not yet been captured. Void can be used only in the following sequence- Authorization Only > Authorization Only, Continued > Void.
        produces:
            - application/json
        security:
            - oauth:
                - write
            - basic: []
        parameters:
            - name: createCreditTransaction
              in: body
              schema:
                $ref: '#/definitions/createCreditTransaction'
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/creditResponce'
            x-example: {}
          '404':
            description: Address not created
            schema:
              $ref: '#/definitions/errorResponse'
          '500':
            description: System Error.
            schema:
              $ref: '#/definitions/errorResponse'    
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/errorResponse'
    /v1/fraudManagement/getHeldTransactionList:
      get:
        tags:
          - fraudManagement
        summary: Get Held Transaction List.
        description: Use this function to get data for suspicious transactions. The function will return data for up to 1000 of the most recent transactions in a single request. Paging options can be sent to limit the result set or to retrieve additional transactions beyond the 1000 transaction limit. You can add the sorting and paging options shown below to customize the result set.
        operationId: getHeldTransactionList
        produces:
            - application/json
        security:
            - oauth:
                - write
            - basic: []
        parameters:
          - name: merchantAuthentication
            in: query
            type: string
            description: 'Contains merchant authentication information.'
            required: true
          - name: name
            in: query
            type: string
            description: 'Merchant’s unique API Login ID.'
            required: true  
          - name: transactionKey
            in: query
            type: string
            required: false
            description: 'Merchant’s unique Transaction Key.'
          - name: refId
            in: query
            type: string
            required: false
            description: 'Merchant-assigned reference ID for the request.'
          - name: status
            in: query
            type: string
            required: true
          - name: sorting
            in: query
            type: string
            description: 'Contains sorting information.'
            required: false  
          - name: orderBy
            in: query
            type: string
            required: false
            description: 'Order of transactions in response.'
          - name: orderDescending
            in: query
            type: boolean
            required: false
            description: 'Sort the transactions in descending order.' 
          - name: paging
            in: query
            type: string
            required: false
            description: 'Contains paging information.'  
          - name: limit
            in: query
            type: string
            required: false
            description: 'The number of transactions per page.' 
          - name: offset
            in: query
            type: string
            required: false
            description: 'The number of the page to return results from.'  
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/transactions'
            x-example: {}
          '404':
            description: Address not created
            schema:
              $ref: '#/definitions/errorResponse'
          '500':
            description: System Error.
            schema:
              $ref: '#/definitions/errorResponse'    
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/errorResponse'
    /v1/fraudManagement/approveOrDeclineHeldTransaction:
      post:
        tags:
          - fraudManagement
        summary: Approve Or Decline Held Transaction.
        description: Approve or Decline a held Transaction.
        produces:
            - application/json
        security:
            - oauth:
                - write
            - basic: []
        parameters:
            - name: createApproveOrDeclineHeldTransaction
              in: body
              schema:
                $ref: '#/definitions/createApproveOrDeclineHeldTransaction'
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/fraudManagementResponce'
            x-example: {}
          '404':
            description: Address not created
            schema:
              $ref: '#/definitions/errorResponse'
          '500':
            description: System Error.
            schema:
              $ref: '#/definitions/errorResponse'    
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/errorResponse'
    /v1/recurringBilling/createASubscription:
      post:
        tags:
          - recurringBilling
        summary: Recurring Billing.
        description: Recurring Billing API methods enable you to manage regular payment subscriptions.
        produces:
            - application/json
        security:
            - oauth:
                - write
            - basic: []
        parameters:
            - name: createASubscription
              in: body
              schema:
                $ref: '#/definitions/createASubscription'
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/createSubscriptionResponce'
            x-example: {}
          '404':
            description: Address not created
            schema:
              $ref: '#/definitions/errorResponse'
          '500':
            description: System Error.
            schema:
              $ref: '#/definitions/errorResponse'    
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/errorResponse'
    /v1/recurringBilling/createASubscriptionFromCustomerProfile:
      post:
        tags:
          - recurringBilling
        summary: Create a Subscription from Customer Profile.
        description: This request enables you to create a recurring billing subscription from an existing customer profile.
        produces:
            - application/json
        security:
            - oauth:
                - write
            - basic: []
        parameters:
            - name: createASubscriptionFromCustomerProfile
              in: body
              schema:
                $ref: '#/definitions/createASubscriptionFromCustomerProfile'
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/createASubscriptionFromCustomerProfileResponce'
            x-example: {}
          '404':
            description: Address not created
            schema:
              $ref: '#/definitions/errorResponse'
          '500':
            description: System Error.
            schema:
              $ref: '#/definitions/errorResponse'    
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/errorResponse'
    /v1/recurringBilling/getSubscription:
      get:
        tags:
          - recurringBilling
        summary: Get Subscription.
        description: Retrieves an existing ARB subscription.
        operationId: getSubscription
        produces:
            - application/json
        security:
            - oauth:
                - write
            - basic: []
        parameters:
          - name: merchantAuthentication
            in: query
            type: string
            description: 'Contains merchant authentication information.'
            required: true
          - name: name
            in: query
            type: string
            description: 'Merchant’s unique API Login ID.'
            required: true  
          - name: transactionKey
            in: query
            type: integer
            required: true
            description: 'Merchant’s unique Transaction Key.'  
          - name: refId
            in: query
            type: string
            description: 'Merchant-assigned reference ID for the request.'
            required: false
          - name: subscriptionId
            in: query
            type: string
            description: 'The payment gateway-assigned identification number for the subscription.'
            required: true  
          - name: includeTransactions
            in: query
            type: integer
            required: false
            description: 'Indicates whether to include information about transactions for this subscription.'
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/getSubscriptionResponce'
            x-example: {}
          '404':
            description: Address not created
            schema:
              $ref: '#/definitions/errorResponse'
          '500':
            description: System Error.
            schema:
              $ref: '#/definitions/errorResponse'    
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/errorResponse'
    /v1/recurringBilling/getSubscriptionStatus:
      get:
        tags:
          - recurringBilling
        summary: Get Subscription Status.
        description: Retrieves the status of an existing ARB subscription.
        operationId: getSubscriptionStatus
        produces:
            - application/json
        security:
            - oauth:
                - write
            - basic: []
        parameters:
          - name: merchantAuthentication
            in: query
            type: string
            description: 'Contains merchant authentication information.'
            required: true
          - name: name
            in: query
            type: string
            description: 'Merchant’s unique API Login ID.'
            required: true  
          - name: transactionKey
            in: query
            type: integer
            required: true
            description: 'Merchant’s unique Transaction Key.'  
          - name: refId
            in: query
            type: string
            description: 'Merchant-assigned reference ID for the request.'
            required: false
          - name: subscriptionId
            in: query
            type: integer
            description: 'The payment gateway-assigned identification number for the subscription.'
            required: true
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/getSubscriptionStatusResponce'
            x-example: {}
          '404':
            description: Address not created
            schema:
              $ref: '#/definitions/errorResponse'
          '500':
            description: System Error.
            schema:
              $ref: '#/definitions/errorResponse'    
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/errorResponse'
    /v1/recurringBilling/updateSubscription:
      put:
        tags:
          - recurringBilling
        summary: Update A Customer Address
        description: Update an address associated with a customer profile.
        operationId: updateSubscription
        security:
          - oauth:
              - write
          - basic: []
        consumes:
          - application/json
        produces:
          - application/json
        parameters:
          - name: refId
            in: query
            type: string
            description: Unique identifier of the customer profile.
            required: true
          - name: subscriptionId
            in: query
            type: string
            description: Unique identifier of the address.
            required: true
          - name: updateSubscription
            in: body
            description: Contains the address information.
            required: true
            schema:
              $ref: '#/definitions/createSubscription'
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/updateSubscriptionResponse'
            x-example: {}
          '404':
            description: Address not updated
            schema:
              $ref: '#/definitions/errorResponse'
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/errorResponse'
    /v1/recurringBilling/cancelSubscription:
      post:
        tags:
          - recurringBilling
        summary: Cancel Subscription.
        description: Cancels an existing subscription.
        produces:
            - application/json
        security:
            - oauth:
                - write
            - basic: []
        parameters:
            - name: createCancelSubscription
              in: body
              schema:
                $ref: '#/definitions/createCancelSubscription'
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/createCancelSubscriptionResponce'
            x-example: {}
          '404':
            description: Address not created
            schema:
              $ref: '#/definitions/errorResponse'
          '500':
            description: System Error.
            schema:
              $ref: '#/definitions/errorResponse'    
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/errorResponse'
    /v1/recurringBilling/getAListOfSubscriptions:
      get:
        tags:
          - recurringBilling
        summary: Get a List of Subscriptions.
        description: You can use the following method to request a list of subscriptions.
        operationId: getAListOfSubscriptions
        produces:
            - application/json
        security:
            - oauth:
                - write
            - basic: []
        parameters:
          - name: merchantAuthentication
            in: query
            type: string
            description: 'Contains merchant authentication information.'
            required: true
          - name: name
            in: query
            type: string
            description: 'Merchant’s unique API Login ID.'
            required: true  
          - name: transactionKey
            in: query
            type: integer
            required: true
            description: 'Merchant’s unique Transaction Key.'  
          - name: refId
            in: query
            type: string
            description: 'Merchant-assigned reference ID for the request.'
            required: false
          - name: searchType
            in: query
            type: string
            description: 'Specifies how to filter search results.'
            required: true
          - name: sorting
            in: query
            type: string
            description: 'Contains sorting information.'
            required: false
          - name: orderBy
            in: query
            type: string
            description: 'Order of results in response.'
            required: true
          - name: orderDescending
            in: query
            type: boolean
            required: false
            description: 'Sort the results in descending order.'  
          - name: paging
            in: query
            type: string
            description: 'Contains paging information.'
            required: false
          - name: limit
            in: query
            type: integer
            description: 'The number of transactions per page.'
            required: false
          - name: offset
            in: query
            type: string
            description: 'The number of the page to return results from.'
            required: false    
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/getAListOfSubscriptionsResponce'
            x-example: {}
          '404':
            description: Address not created
            schema:
              $ref: '#/definitions/errorResponse'
          '500':
            description: System Error.
            schema:
              $ref: '#/definitions/errorResponse'    
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/errorResponse'          
    /v1/transactionReporting/getSettledBatchList:
      get:
        tags:
          - transactionReporting
        summary: Get Subscription.
        description: Retrieves an existing ARB subscription.
        operationId: getSettledBatchList
        produces:
            - application/json
        security:
            - oauth:
                - write
            - basic: []
        parameters:
          - name: merchantAuthentication
            in: query
            type: string
            description: 'Contains merchant authentication information.'
            required: true
          - name: name
            in: query
            type: string
            description: 'Merchant’s unique API Login ID.'
            required: true  
          - name: transactionKey
            in: query
            type: integer
            required: true
            description: 'Merchant’s unique Transaction Key.'  
          - name: refId
            in: query
            type: string
            description: 'Merchant-assigned reference ID for the request.'
            required: false
          - name: includeStatistics
            in: query
            type: boolean
            description: '  Include statistics for the batches.'
            required: false  
          - name: firstSettlementDate
            in: query
            type: string
            required: false
            description: 'Use this field to query against an inclusive range of dates other than the past 24 hrs.'
          - name: lastSettlementDate
            in: query
            type: string
            required: false
            description: 'Use this field to query against an inclusive range of dates other than the past 24 hrs.'  
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/getSettleBatchListResponce'
            x-example: {}
          '404':
            description: Address not created
            schema:
              $ref: '#/definitions/errorResponse'
          '500':
            description: System Error.
            schema:
              $ref: '#/definitions/errorResponse'    
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/errorResponse'
    /v1/transactionReporting/getTransactionList:
      get:
        tags:
          - transactionReporting
        summary: Get Subscription.
        description: Retrieves an existing ARB subscription.
        operationId: getTransactionList
        produces:
            - application/json
        security:
            - oauth:
                - write
            - basic: []
        parameters:
          - name: merchantAuthentication
            in: query
            type: string
            description: 'Contains merchant authentication information.'
            required: true
          - name: name
            in: query
            type: string
            description: 'Merchant’s unique API Login ID.'
            required: true  
          - name: transactionKey
            in: query
            type: integer
            required: true
            description: 'Merchant’s unique Transaction Key.'  
          - name: refId
            in: query
            type: string
            description: 'Merchant-assigned reference ID for the request.'
            required: false
          - name: batchId
            in: query
            type: boolean
            description: 'The identification number for the batch.'
          - name: sorting
            in: query
            type: string
            required: false
            description: 'Contains sorting information.'
          - name: orderBy
            in: query
            type: string
            required: false
            description: 'Order of transactions in response.' 
          - name: orderDescending
            in: query
            type: boolean
            required: false
            description: 'Sort the transactions in descending order.' 
          - name: paging
            in: query
            type: string
            required: false
            description: 'Contains paging information.' 
          - name: limit
            in: query
            type: string
            required: false
            description: 'The number of transactions per page.' 
          - name: offset
            in: query
            type: string
            required: false
            description: 'The number of the page to return results from.'   
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/getTransactionListResponse'
            x-example: {}
          '404':
            description: Address not created
            schema:
              $ref: '#/definitions/errorResponse'
          '500':
            description: System Error.
            schema:
              $ref: '#/definitions/errorResponse'    
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/errorResponse'          
    /v1/transactionReporting/getUnsettledTransactionList:
      get:
        tags:
          - transactionReporting
        summary: getUnsettledTransactionList.
        description: Use this function to get data for unsettled transactions.
        operationId: getUnsettledTransactionList
        produces:
            - application/json
        security:
            - oauth:
                - write
            - basic: []
        parameters:
          - name: merchantAuthentication
            in: query
            type: string
            description: 'Contains merchant authentication information.'
            required: true
          - name: name
            in: query
            type: string
            description: 'Merchant’s unique API Login ID.'
            required: true  
          - name: transactionKey
            in: query
            type: integer
            required: true
            description: 'Merchant’s unique Transaction Key.'  
          - name: refId
            in: query
            type: string
            description: 'Merchant-assigned reference ID for the request.'
            required: false
          - name: sorting
            in: query
            type: string
            required: false
            description: 'Contains sorting information.'
          - name: orderBy
            in: query
            type: string
            required: false
            description: 'Order of transactions in response.' 
          - name: orderDescending
            in: query
            type: boolean
            required: false
            description: 'Sort the transactions in descending order.' 
          - name: paging
            in: query
            type: string
            required: false
            description: 'Contains paging information.' 
          - name: limit
            in: query
            type: string
            required: false
            description: 'The number of transactions per page.' 
          - name: offset
            in: query
            type: string
            required: false
            description: 'The number of the page to return results from.'   
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/getUnsettledTransactionListResponse'
            x-example: {}
          '404':
            description: Address not created
            schema:
              $ref: '#/definitions/errorResponse'
          '500':
            description: System Error.
            schema:
              $ref: '#/definitions/errorResponse'    
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/errorResponse'
    /v1/transactionReporting/getCustomerProfileTransactionList:
      get:
        tags:
          - transactionReporting
        summary: getCustomerProfileTransactionList.
        description: Use this method to retrieve transactions for a specific customer profile or customer payment profile.
        operationId: getCustomerProfileTransactionList
        produces:
            - application/json
        security:
            - oauth:
                - write
            - basic: []
        parameters:
          - name: merchantAuthentication
            in: query
            type: string
            description: 'Contains merchant authentication information.'
            required: true
          - name: name
            in: query
            type: string
            description: 'Merchant’s unique API Login ID.'
            required: true  
          - name: transactionKey
            in: query
            type: integer
            required: true
            description: 'Merchant’s unique Transaction Key.'  
          - name: refId
            in: query
            type: string
            description: 'Merchant-assigned reference ID for the request.'
            required: false
          - name: customerProfileId
            in: query
            type: string
            description: 'Merchant-assigned reference ID for the request.'
            required: false
          - name: customerPaymentProfileIdList
            in: query
            type: string
            description: 'Merchant-assigned reference ID for the request.'
            required: false  
          - name: sorting
            in: query
            type: string
            required: false
            description: 'Contains sorting information.'
          - name: orderBy
            in: query
            type: string
            required: false
            description: 'Order of transactions in response.' 
          - name: orderDescending
            in: query
            type: boolean
            required: false
            description: 'Sort the transactions in descending order.'
          - name: paging
            in: query
            type: string
            required: false
            description: 'Contains paging information.' 
          - name: limit
            in: query
            type: string
            required: false
            description: 'The number of transactions per page.' 
          - name: offset
            in: query
            type: string
            required: false
            description: 'The number of the page to return results from.'   
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/getTransactionListResponse'
            x-example: {}
          '404':
            description: Address not created
            schema:
              $ref: '#/definitions/errorResponse'
          '500':
            description: System Error.
            schema:
              $ref: '#/definitions/errorResponse'    
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/errorResponse'
    /v1/transactionReporting/getTransactionDetails:
      get:
        tags:
          - transactionReporting
        summary: Get Transaction Details.
        description: Use this function to get detailed information about a specific transaction.
        operationId: getTransactionDetails
        produces:
            - application/json
        security:
            - oauth:
                - write
            - basic: []
        parameters:
          - name: merchantAuthentication
            in: query
            type: string
            description: 'Contains merchant authentication information.'
            required: true
          - name: name
            in: query
            type: string
            description: 'Merchant’s unique API Login ID.'
            required: true  
          - name: transactionKey
            in: query
            type: integer
            required: true
            description: 'Merchant’s unique Transaction Key.'  
          - name: refId
            in: query
            type: string
            description: 'Merchant-assigned reference ID for the request.'
            required: false
          - name: transId
            in: query
            type: string
            description: 'Merchant-assigned reference ID for the request.'
            required: false
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/getTransactionDetailsResponse'
            x-example: {}
          '404':
            description: Address not created
            schema:
              $ref: '#/definitions/errorResponse'
          '500':
            description: System Error.
            schema:
              $ref: '#/definitions/errorResponse'    
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/errorResponse'
    /v1/transactionReporting/getBatchStatistics:
      get:
        tags:
          - transactionReporting
        summary: Get Batch Statistics.
        description: A call to getBatchStatisticsRequest returns statistics for a single batch, specified by the batch ID.
        operationId: getBatchStatistics
        produces:
            - application/json
        security:
            - oauth:
                - write
            - basic: []
        parameters:
          - name: merchantAuthentication
            in: query
            type: string
            description: 'Contains merchant authentication information.'
            required: true
          - name: name
            in: query
            type: string
            description: 'Merchant’s unique API Login ID.'
            required: true  
          - name: transactionKey
            in: query
            type: integer
            required: true
            description: 'Merchant’s unique Transaction Key.'  
          - name: refId
            in: query
            type: string
            description: 'Merchant-assigned reference ID for the request.'
            required: false
          - name: batchId
            in: query
            type: string
            description: 'Merchant-assigned reference ID for the request.'
            required: false
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/getBatchStatisticsResponse'
            x-example: {}
          '404':
            description: Address not created
            schema:
              $ref: '#/definitions/errorResponse'
          '500':
            description: System Error.
            schema:
              $ref: '#/definitions/errorResponse'    
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/errorResponse'
    /v1/transactionReporting/getMerchantDetails:
      get:
        tags:
          - transactionReporting
        summary: Get Merchant Details.
        description: Call this function and supply your authentication information to receive merchant details in the response. The information that is returned is helpful for OAuth and Accept integrations.
        operationId: getMerchantDetails
        produces:
            - application/json
        security:
            - oauth:
                - write
            - basic: []
        parameters:
          - name: merchantAuthentication
            in: query
            type: string
            description: 'Contains merchant authentication information.'
            required: true
          - name: name
            in: query
            type: string
            description: 'Merchant’s unique API Login ID.'
            required: true  
          - name: transactionKey
            in: query
            type: integer
            required: true
            description: 'Merchant’s unique Transaction Key.'
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/getMerchantDetailsResponse'
            x-example: {}
          '404':
            description: Address not created
            schema:
              $ref: '#/definitions/errorResponse'
          '500':
            description: System Error.
            schema:
              $ref: '#/definitions/errorResponse'    
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/errorResponse'
    /v1/transactionReporting/getAccountUpdaterJobSummary:
      get:
        tags:
          - transactionReporting
        summary: Get Account Updater Job Summary.
        description: Use this function to get a summary of the results of the Account Updater process for a particular month.
        operationId: getAccountUpdaterJobSummary
        produces:
            - application/json
        security:
            - oauth:
                - write
            - basic: []
        parameters:
          - name: merchantAuthentication
            in: query
            type: string
            description: 'Contains merchant authentication information.'
            required: true
          - name: name
            in: query
            type: string
            description: 'Merchant’s unique API Login ID.'
            required: true  
          - name: transactionKey
            in: query
            type: integer
            required: true
            description: 'Merchant’s unique Transaction Key.'
          - name: refId
            in: query
            type: string
            description: 'Merchant-assigned reference ID for the request.'
            required: false  
          - name: month
            in: query
            type: integer
            required: true
            description: 'The month in which the Account Updater process was run.'
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/getAccountUpdaterJobSummaryResponse'
            x-example: {}
          '404':
            description: Address not created
            schema:
              $ref: '#/definitions/errorResponse'
          '500':
            description: System Error.
            schema:
              $ref: '#/definitions/errorResponse'    
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/errorResponse'
    /v1/transactionReporting/getAccountUpdaterJobDetails:
      get:
        tags:
          - transactionReporting
        summary: Get Account Updater Job Details.
        description: Use this function to get details of each card updated or deleted by the Account Updater process for a particular month. The function will return data for up to 1000 of the most recent transactions in a single request.
        operationId: getAccountUpdaterJobDetails
        produces:
            - application/json
        security:
            - oauth:
                - write
            - basic: []
        parameters:
          - name: merchantAuthentication
            in: query
            type: string
            description: 'Contains merchant authentication information.'
            required: true
          - name: name
            in: query
            type: string
            description: 'Merchant’s unique API Login ID.'
            required: true  
          - name: transactionKey
            in: query
            type: integer
            required: true
            description: 'Merchant’s unique Transaction Key.'
          - name: refId
            in: query
            type: string
            description: 'Merchant-assigned reference ID for the request.'
            required: false  
          - name: month
            in: query
            type: integer
            required: true
            description: 'The month in which the Account Updater process was run.'
          - name: modifiedTypeFilter
            in: query
            type: string
            required: false
            description: 'Filter the results to to include only updates, only deletes, or all changes.'
          - name: paging
            in: query
            type: string
            required: false
            description: 'Contains paging information.' 
          - name: limit
            in: query
            type: string
            required: false
            description: 'The number of transactions per page.' 
          - name: offset
            in: query
            type: string
            required: false
            description: 'The number of the page to return results from.'    
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/getAccountUpdaterJobDetailsResponse'
            x-example: {}
          '404':
            description: Address not created
            schema:
              $ref: '#/definitions/errorResponse'
          '500':
            description: System Error.
            schema:
              $ref: '#/definitions/errorResponse'    
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/errorResponse'
    /v1/acceptSuite/createAnAcceptPaymentTransaction:
      post:
        tags:
          - acceptSuite
        summary: Create An Apple Pay Transaction.
        description: Use this function to create an Authorize.net payment transaction request using Apple Pay data in place of card data.
        produces:
            - application/json
        security:
            - oauth:
                - write
            - basic: []
        parameters:
            - name: createAnAcceptPaymentTransaction
              in: body
              schema:
                $ref: '#/definitions/createAnAcceptPaymentTransaction'
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/createAnAcceptPaymentTransactionResponce'
            x-example: {}
          '404':
            description: Address not created
            schema:
              $ref: '#/definitions/errorResponse'
          '500':
            description: System Error.
            schema:
              $ref: '#/definitions/errorResponse'    
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/errorResponse'
    /v1/acceptSuite/getAcceptCustomerProfilePage:
      get:
        tags:
          - acceptSuite
        summary: Get Accept Customer Profile Page.
        description: Use this function to initiate a request for direct access to the Authorize.net website.
        operationId: getAcceptCustomerProfilePage
        produces:
            - application/json
        security:
            - oauth:
                - write
            - basic: []
        parameters:
          - name: merchantAuthentication
            in: query
            type: string
            description: 'Contains merchant authentication information.'
            required: true
          - name: name
            in: query
            type: string
            description: 'Merchant’s unique API Login ID.'
            required: true  
          - name: transactionKey
            in: query
            type: integer
            required: true
            description: 'Merchant’s unique Transaction Key.'
          - name: refId
            in: query
            type: string
            description: 'Merchant-assigned reference ID for the request.'
            required: false  
          - name: customerProfileId
            in: query
            type: integer
            required: true
            description: 'The month in which the Account Updater process was run.'
          - name: hostedProfileSettings
            in: query
            type: string
            required: false
            description: 'This is an array of settings for the session (optional).'
          - name: setting
            in: query
            type: string
            required: false
            description: 'Contains settingName and settingValue.' 
          - name: settingName
            in: query
            type: string
            required: false
            description: 'The name of the setting you wish to change.' 
          - name: settingValue
            in: query
            type: string
            required: false
            description: 'The value of the setting you wish to change.'    
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/getAcceptCustomerProfilePageResponse'
            x-example: {}
          '404':
            description: Address not created
            schema:
              $ref: '#/definitions/errorResponse'
          '500':
            description: System Error.
            schema:
              $ref: '#/definitions/errorResponse'    
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/errorResponse'
    /v1/acceptSuite/getAnAcceptPaymentPage:
      get:
        tags:
          - acceptSuite
        summary: Get an Accept Payment Page.
        description: Use this function to retrieve a form token which can be used to request the Authorize.net Accept hosted payment page.
        operationId: getAnAcceptPaymentPage
        produces:
            - application/json
        security:
            - oauth:
                - write
            - basic: []
        parameters:
          - name: merchantAuthentication
            in: query
            type: string
            description: 'Contains merchant authentication information.'
            required: true
          - name: name
            in: query
            type: string
            description: 'Merchant’s unique API Login ID.'
            required: true  
          - name: transactionKey
            in: query
            type: integer
            required: true
            description: 'Merchant’s unique Transaction Key.'
          - name: refId
            in: query
            type: string
            description: 'Merchant-assigned reference ID for the request.'
            required: false  
          - name: transactionRequest
            in: query
            type: integer
            required: true
            description: 'This element is a container for transaction specific information.'
          - name: transactionType
            in: query
            type: string
            required: true
            description: 'Type of credit card transaction.'
          - name: amount
            in: query
            type: string
            required: true
            description: 'Amount of the transaction.' 
          - name: profile
            in: query
            type: string
            required: false
            description: 'The following fields enable you to charge a transaction using payment or shipping profiles.' 
          - name: customerProfileId
            in: query
            type: string
            required: false
            description: 'The ID of the customer profile.'
          - name: solution
            in: query
            type: string
            description: 'Contains information about the software that generated the transaction.'
            required: false
          - name: id
            in: query
            type: string
            description: 'The unique Solution ID which you generate and associate with your solution through the Partner Interface.'
            required: false  
          - name: order
            in: query
            type: string
            required: false
            description: 'Contains information about the order.'
          - name: invoiceNumber
            in: query
            type: string
            description: 'Merchant-defined invoice number associated with the order.'
            required: false  
          - name: description
            in: query
            type: integer
            required: true
            description: 'Description of the item purchased.'
          - name: lineItems
            in: query
            type: string
            required: false
            description: '  Contains one or more lineItem elements, up to a maximum of 30 line items.'
          - name: lineItem
            in: query
            type: string
            required: false
            description: 'Contains information about one item.' 
          - name: itemId
            in: query
            type: string
            required: false
            description: 'Item identification.' 
          - name: duty
            in: query
            type: string
            required: false
            description: '  Contains information about any duty applied.'  
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/getAcceptCustomerProfilePageResponse'
            x-example: {}
          '404':
            description: Address not created
            schema:
              $ref: '#/definitions/errorResponse'
          '500':
            description: System Error.
            schema:
              $ref: '#/definitions/errorResponse'    
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/errorResponse'          
  definitions:
    Identifier:
      description: Model for Identifier
      type: object
      properties:
        email:
          type: string
          x-example: customer-profile-email@here.com
        reference:
          type: string
          x-example: Merchant_Customer_ID
    CustomerList:
      properties:
        customers:
          type: array
          items:
            $ref: '#/definitions/Customer'
    CustomerCollection:
      properties:
        _links:
          $ref: '#/definitions/collectionLinks'
        _embedded:
          $ref: '#/definitions/CustomerList'
        totalCustomers:
          type: integer
          x-example: 1243
          description: Total number of customer profiles associated with tje Authorize.Net account that submitted the request.
    CreateCustomerAddress:
      description: Contains the information to create a customer address object.
      type: object
      required:
        - address1
      properties:
        address1:
          type: string
          x-example: 123 Main St.
          description: The customer's street address.
        administrativeArea:
          type: string
          x-example: WA
          description: State or administrative area of the customer's address.
        company:
          type: string
          x-example: 'Widgets, Inc.'
          description: 'Name of the company associated with the customer''s address, if any.'
        country:
          type: string
          x-example: USA
          description: Country associated with the customer's address.
        default:
          type: boolean
          x-example: 'true'
          description: Setting this to `true` makes this address the customer's default address.
        firstName:
          type: string
          x-example: John
          description: First name associated with the customer's address.
        lastName:
          type: string
          x-example: Doe
          description: Last name associated with the customer's address.
        locality:
          type: string
          x-example: Bellevue
          description: City or town name associated with the customer's address.
        phoneNumber:
          type: string
          x-example: 555-555-5555
          description: Phone number associated with the customer's address.
        postalCode:
          type: string
          x-example: '98004'
          description: ZIP or postal code of the customer's address.
    CreatePaymentMethod:
      description: Contains information about a customer's payment method.
      type: object
      properties:
        addressId:
          type: string
          description: Unique identifier of the address associated with the payment method.
        billTo:
          $ref: '#/definitions/baseAddress'
          description: Contains customer billing information.
        default:
          type: boolean
          x-example: 'true'
          description: Setting this to `true` sets this payment method as the default for this customer profile.
        paymentInformation:
          $ref: '#/definitions/paymentInformation'
    CreateCustomerAndPaymentMethod:
      description: Contains the information to create a profile and an associated payment method.
      type: object
      required:
        - identifier
      properties:
        description:
          type: string
          x-example: 'John Smith, contractor.'
          description: Description of the customer or customer profile. Required only when no values for `merchantCustomerId` and `email` are submitted. 255-character maximum.
        identifier:
          $ref: '#/definitions/Identifier'
        paymentMethod:
          $ref: '#/definitions/CreatePaymentMethod'
    Customer:
      description: Response information returned after the creation of a customer profile.
      properties:
        id:
          type: string
          description: Unique identifier of the customer profile.
        description:
          type: string
          x-example: Customer Description
          description: Description of the customer.
        identifier:
          $ref: '#/definitions/Identifier'
        _links:
          $ref: '#/definitions/CustomerLinks'
    CustomerLinks:
      properties:
        self:
          $ref: '#/definitions/link'
        paymentMethods:
          $ref: '#/definitions/link'
        addresses:
          $ref: '#/definitions/link'
    paymentRequest:
      description: Payment Request object. Contains information about the payment transaction.
      title: paymentRequest
      type: object
      properties:
        clientReferenceInformation:
          $ref: '#/definitions/clientReferenceInformation'
        processingInformation:
          $ref: '#/definitions/processingInformation'
        paymentInformation:
          $ref: '#/definitions/paymentInformation'
        orderInformation:
          $ref: '#/definitions/orderInformation'
        buyerInformation:
          $ref: '#/definitions/buyerInformation'
        deviceInformation:
          $ref: '#/definitions/deviceInformation'
        consumerAuthenticationInformation:
          $ref: '#/definitions/consumerAuthenticationInformation'
        pointOfSaleInformation:
          $ref: '#/definitions/pointOfSaleInformation'
    createTransactionRequestForChargeACreditCard:
      type: object
      properties:
        createTransactionRequest:
          $ref: '#/definitions/createTransactionRequest'
    createCapturePreviousAuthorizedAmount:
      description: Transaction Request object. Contains information about the payment transaction.
      type: object
      properties:
        createTransactionRequest:
          $ref: '#/definitions/createTransactionRequestForPreviousAuthorizedAmount'
    transactionRequestForPreviousAuthorizedAmount:
       type: object
       properties:
        transactionType:
          type: string
        amount:
          type: integer
        refTransId:
          type: string  
    createCaptureFundsAuthorizedThroughAnotherChannel:
      type: object
      properties:
        createTransactionRequest:
          $ref: '#/definitions/transactionRequestForCaptureFundsAuthorizedThroughAnotherChannel'
    transactionRequestForcreateCaptureFundsAuthorizedThroughAnotherChannel:
       type: object
       properties:
        transactionType:
          type: string
        amount:
          type: integer
        payment:
           $ref: '#/definitions/CCpayment'  
        authCode:
            type: string  
    createRefundTransaction:
      description: Transaction Request object for Refund Tranaaction. Contains information about the payment transaction.
      type: object
      properties:
        createTransactionRequest:
          $ref: '#/definitions/transactionRequestForcreateRefundTransaction'
    transactionRequestForcreateRefundTransaction:
       type: object
       properties:
        merchantAuthentication:
           $ref: '#/definitions/merchantAuthentication'
        refId:
            type: string    
        transactionRequest:
          $ref: '#/definitions/transactionsRequestForcreateRefundTransaction'
    transactionsRequestForcreateRefundTransaction:
       type: object
       properties:
        transactionType:
          type: string
        amount:
          type: integer
        payment:
           $ref: '#/definitions/CCpayment'  
        refTransId:
            type: string      
    createVoidTransaction:
      type: object
      properties:
        createTransactionRequest:
          $ref: '#/definitions/createTransactionRequestForVoidTransaction'
    createTransactionRequestForVoidTransaction:
      type: object
      properties:
        merchantAuthentication:
          $ref: '#/definitions/merchantAuthentication'
        refId:
            type: string    
        transactionRequest:
          $ref: '#/definitions/transactionRequestForcreateVoidTransaction'  
    transactionRequestForcreateVoidTransaction:
       type: object
       properties:
        transactionType:
          type: string
        refTransId:
          type: string
    createUpdateSplitTenderGroup:
      description: Transaction Request object for Refund Tranaaction. Contains information about the payment transaction.
      type: object
      properties:
        createTransactionRequest:
          $ref: '#/definitions/createTransactionRequest'
        splitTenderId:
          type: integer
        splitTenderStatus:
          type: string
    createDebitABankAccount:
      type: object
      properties:
        createTransactionRequest:
          $ref: '#/definitions/transactionRequestForDebitBankAccount'
    transactionRequestForDebitBankAccount:
      type: object
      properties:
        merchantAuthentication:
          $ref: '#/definitions/merchantAuthentication'
        refId:
            type: string    
        transactionRequest:
          $ref: '#/definitions/transactionsRequestForDebitBankAccount'
    transactionsRequestForDebitBankAccount:
       type: object
       properties:
        transactionType:
          type: string
        amount:
          type: integer
        payment:
           $ref: '#/definitions/bankAccountDebitAccount'
        lineItems:
          $ref: '#/definitions/lineItems'
        tax:
          $ref: '#/definitions/tax'
        duty:
          $ref: '#/definitions/duty'
        shipping:
          $ref: '#/definitions/shippingFoDebitBankAccount'
        poNumber:
          type: string
        billTo:
          $ref: '#/definitions/billTo'
        shipTo:
          $ref: '#/definitions/shipTo'
        customerIP:
          type: string
    createCreditABankAccount:
      type: object
      properties:
        createTransactionRequest:
          $ref: '#/definitions/createTransactionRequestForCreditABankAccount'
    createTransactionRequestForCreditABankAccount:
      type: object
      properties:
        merchantAuthentication:
          $ref: '#/definitions/merchantAuthentication'
        refId:
            type: string    
        transactionRequest:
          $ref: '#/definitions/transactionRequestForCreditBankAccount'
    transactionRequestForCreditBankAccount:
       type: object
       properties:
        transactionType:
          type: string
        amount:
          type: integer
        payment:
           $ref: '#/definitions/bankAccountDebitAccount'
        refTransId:
          type: string    
    chargeATokenizedCreditCard:
      type: object
      properties:
        createTransactionRequest:
          $ref: '#/definitions/transactionRequestchargeATokenizedCreditCard'
    transactionRequestchargeATokenizedCreditCard:
      type: object
      properties:
        merchantAuthentication:
          $ref: '#/definitions/merchantAuthentication'
        refId:
            type: string    
        transactionRequest:
          $ref: '#/definitions/transactionsRequestchargeATokenizedCreditCard'
    transactionsRequestchargeATokenizedCreditCard:
      type: object
      properties:
        transactionType:
            type: string  
        amount:
           type: string
        payment:
           $ref: '#/definitions/creditCardTokenized'   
        lineItems:
         $ref: '#/definitions/lineItems'
        tax:
          $ref: '#/definitions/tax'
        duty:
          $ref: '#/definitions/duty'
        shipping:
          $ref: '#/definitions/shipping'
        poNumber:
          type: string
        customer:
          $ref: '#/definitions/customer'
        billTo:
          $ref: '#/definitions/billTo'
        shipTo:
          $ref: '#/definitions/shipTo'
        customerIP:
          type: string  
        transactionSettings:
          $ref: '#/definitions/transactionSettings'
        userFields:
          $ref: '#/definitions/userFields'
        processingOptions:
          $ref: '#/definitions/processingOptions'
        subsequentAuthInformation:
          $ref: '#/definitions/subsequentAuthInformation'  
        authorizationIndicatorType:
          $ref: '#/definitions/authorizationIndicatorType'
    creditCardTokenized:
        type: object
        properties:
          creditCard:
            $ref: '#/definitions/TokenizedcreditCard'
    TokenizedcreditCard:
      properties:
        cardNumber:
          type: integer
        expirationDate:
          type: string
        isPaymentToken:
          type: boolean
        cryptogram:
          type: string
    createTransactionRequestForAnApplePayTransaction:
        type: object
        properties:
          createTransactionRequest:
            $ref: '#/definitions/transactionRequestForAnApplePayTransaction'
    transactionRequestForAnApplePayTransaction:
      type: object
      properties:
        merchantAuthentication:
          $ref: '#/definitions/merchantAuthentication'
        refId:
            type: string    
        transactionRequest:
          $ref: '#/definitions/createAnApplePayTransaction'  
    createAnApplePayTransaction:
      type: object
      properties:
        transactionType:
          type: string
        amount:
          type: string
        payment:
           $ref: '#/definitions/paymentForCreateAnApplePayTransaction'
        lineItems:
          $ref: '#/definitions/lineItems'
        tax:
          $ref: '#/definitions/tax'
        duty:
          $ref: '#/definitions/duty'
        shipping:
          $ref: '#/definitions/shipping'
        poNumber:
          type: string
        billTo:
          $ref: '#/definitions/billTo'
        shipTo:
          $ref: '#/definitions/shipTo'
        customerIP:
          type: string
        userFields:
          $ref: '#/definitions/userFields'
    paymentForCreateAnApplePayTransaction:  
       type: object
       properties:
        opaqueData:
           $ref: '#/definitions/opaqueData'
    opaqueData:
      type: object
      properties:
        dataDescriptor:
          type: string
        dataValue:
          type: string
    createAnAcceptPaymentTransaction:
      type: object
      properties:
        createTransactionRequest:
          $ref: '#/definitions/transactionRequestForAcceptPaymentTransaction'
    transactionRequestForAcceptPaymentTransaction:
      type: object
      properties:
        merchantAuthentication:
          $ref: '#/definitions/merchantAuthentication'
        refId:
            type: string
        transactionRequest:
         $ref: '#/definitions/transactionRequestForCreateAnAcceptPaymentTransaction'
        lineItems:
         $ref: '#/definitions/lineItems'
        poNumber:
          type: string
        billTo:
          $ref: '#/definitions/billTo'
        shipTo:
          $ref: '#/definitions/shipTo'
        customerIP:
          type: string
        userFields:
          $ref: '#/definitions/userFieldsForCreateAnAcceptPaymentTransaction'
    userFieldsForCreateAnAcceptPaymentTransaction:
       type: object
       properties:
         userField:
          $ref: '#/definitions/userFieldForCreateAnAcceptPaymentTransaction'
    userFieldForCreateAnAcceptPaymentTransaction:
       type: array
       items:
          $ref: '#/definitions/userFieldForCreateAnAcceptPaymentTransactions'
    userFieldForCreateAnAcceptPaymentTransactions:
      type: object
      properties:
          name:
            type: string
          value:
            type: string
    transactionRequestForCreateAnAcceptPaymentTransaction:
       type: object
       properties:
        transactionType:
          type: string
        amount:
          type: integer
        payment:
           $ref: '#/definitions/paymentForCreateAnAcceptPaymentTransaction'
    paymentForCreateAnAcceptPaymentTransaction:  
       type: object
       properties:
        opaqueData:
           $ref: '#/definitions/opaqueData'      
    createAuthorizationOnlyTransaction:
      type: object
      properties:
        createTransactionRequest:
          $ref: '#/definitions/transactionRequestForAuthorizationOnlyTransaction'
    transactionRequestForAuthorizationOnlyTransaction:
      type: object
      properties:
        merchantAuthentication:
          $ref: '#/definitions/merchantAuthentication'
        transactionRequest:
          $ref: '#/definitions/transactionRequestForAuthorizationOnly'     
    transactionRequestForAuthorizationOnly:
       type: object
       properties:
        transactionType:
          type: string
        amount:
          type: integer
        payment:
           $ref: '#/definitions/authorizationOnlyTransaction'
    authorizationOnlyTransaction:  
       type: object
       properties:
        payPal:
           $ref: '#/definitions/payPalForAuthorizationOnlyTransaction'
    payPalForAuthorizationOnlyTransaction:
       type: object
       properties:
        successUrl:
          type: string
        cancelUrl:
          type: string
    createAuthorizationAndCaptureTransaction:
        type: object
        properties:
          createTransactionRequest:
            $ref: '#/definitions/createTransactionRequestForAuthorizationAndCaptureTransaction'
    createTransactionRequestForAuthorizationAndCaptureTransaction:
      type: object
      properties:
        merchantAuthentication:
          $ref: '#/definitions/merchantAuthentication'
        transactionRequest:
          $ref: '#/definitions/transactionRequestForAuthorizationAndCapture'       
    transactionRequestForAuthorizationAndCapture:
       type: object
       properties:
        transactionType:
          type: string
        amount:
          type: integer
        payment:
           $ref: '#/definitions/authorizationAndCaptureTransaction'
        lineItems:
           $ref: '#/definitions/lineItems'   
    authorizationAndCaptureTransaction:  
       type: object
       properties:
        payPal:
           $ref: '#/definitions/payPalForAuthorizationAndCaptureTransaction'
    payPalForAuthorizationAndCaptureTransaction:
       type: object
       properties:
        successUrl:
          type: string
        cancelUrl:
          type: string
        paypalLc:
          type: string
        paypalHdrImg:
          type: string
        paypalPayflowcolor:
          type: string
    createAuthorizationOnlyContinueTransaction:
       type: object
       properties:
        createTransactionRequest:
          $ref: '#/definitions/createTransactionRequestForAuthorizationOnlyContinueTransaction'
    createTransactionRequestForAuthorizationOnlyContinueTransaction:
      type: object
      properties:
        merchantAuthentication:
          $ref: '#/definitions/merchantAuthentication'
        transactionRequest:
          $ref: '#/definitions/transactionRequestForAuthorizationOnlyContinue' 
    transactionRequestForAuthorizationOnlyContinue:
       type: object
       properties:
        transactionType:
          type: string
        payment:
           $ref: '#/definitions/authorizationOnlyContinueTransaction'
        refTransId:
          type: string     
    authorizationOnlyContinueTransaction:  
       type: object
       properties:
        payPal:
           $ref: '#/definitions/payPalForauthorizationOnlyContinueTransaction'
    payPalForauthorizationOnlyContinueTransaction:
       type: object
       properties:
        payerID:
          type: string
    createAuthorizationAndCaptureContinue:
       type: object
       properties:
        createTransactionRequest:
          $ref: '#/definitions/createTransactionRequestForAuthorizationAndCaptureContinue'
    createTransactionRequestForAuthorizationAndCaptureContinue:
      type: object
      properties:
        merchantAuthentication:
          $ref: '#/definitions/merchantAuthentication'
        transactionRequest:
          $ref: '#/definitions/transactionRequestForAuthorizationAndCaptureContinue'      
    transactionRequestForAuthorizationAndCaptureContinue:
       type: object
       properties:
        transactionType:
          type: string
        payment:
           $ref: '#/definitions/authorizationAndCaptureContinueTransaction'
        refTransId:
          type: string     
    authorizationAndCaptureContinueTransaction:  
       type: object
       properties:
        payPal:
           $ref: '#/definitions/payPalForAuthorizationAndCaptureContinueTransaction'
    payPalForAuthorizationAndCaptureContinueTransaction:
       type: object
       properties:
        payerID:
          type: string
    createPriorAuthorizationCaptureTransaction:
       type: object
       properties:
        createTransactionRequest:
          $ref: '#/definitions/createTransactionRequestForPriorAuthorizationCaptureTransaction'
    createTransactionRequestForPriorAuthorizationCaptureTransaction:
      type: object
      properties:
        merchantAuthentication:
          $ref: '#/definitions/merchantAuthentication'
        transactionRequest:
          $ref: '#/definitions/transactionRequestForPriorAuthorizationCaptureTransaction'      
    transactionRequestForPriorAuthorizationCaptureTransaction:
       type: object
       properties:
        transactionType:
          type: string
        refTransId:
          type: string 
    createVoidPayPalExpressCheckOutTransaction:
       type: object
       properties:
        createTransactionRequest:
          $ref: '#/definitions/createTransactionRequestForVoidPayPalExpressCheckOutTransaction'
    createTransactionRequestForVoidPayPalExpressCheckOutTransaction:
      type: object
      properties:
        merchantAuthentication:
          $ref: '#/definitions/merchantAuthentication'
        transactionRequest:
          $ref: '#/definitions/transactionRequestForVoidPayPalExpressCheckOut'      
    transactionRequestForVoidPayPalExpressCheckOut:
       type: object
       properties:
        transactionType:
          type: string
        refTransId:
          type: string 
    createCreditTransaction:
       type: object
       properties:
        createTransactionRequest:
          $ref: '#/definitions/createTransactionRequestForCreditTransaction'
    createTransactionRequestForCreditTransaction:
      type: object
      properties:
        merchantAuthentication:
          $ref: '#/definitions/merchantAuthentication'
        transactionRequest:
          $ref: '#/definitions/transactionRequestForCredit'
    transactionRequestForCredit:
       type: object
       properties:
        transactionType:
          type: string
        refTransId:
          type: string 
    createApproveOrDeclineHeldTransaction:
       type: object
       properties:
        updateHeldTransactionRequest:
          $ref: '#/definitions/updateHeldTransactionRequest'
        refId:
          type: string  
        heldTransactionRequest:
          $ref: '#/definitions/heldTransactionRequest'
    updateHeldTransactionRequest:
      type: object
      properties:
        merchantAuthentication:
          $ref: '#/definitions/merchantAuthentication'      
    heldTransactionRequest:
       type: object
       properties:
        action:
          type: string
        refTransId:
          type: integer 
    createASubscription:
       type: object
       properties:
        ARBCreateSubscriptionRequest:
          $ref: '#/definitions/createASubscriptionTransaction'
    createASubscriptionTransaction:
      type: object
      properties:
        merchantAuthentication:
          $ref: '#/definitions/merchantAuthentication'
        refId:
          type: string  
        subscription:
          $ref: '#/definitions/subscription'
    ARBCreateSubscriptionRequest:
      type: object
      properties:
        merchantAuthentication:
          $ref: '#/definitions/merchantAuthentication'      
    subscription:
       type: object
       properties:
        name:
          type: string
        paymentSchedule:
          $ref: '#/definitions/paymentScheduleInterval'
        amount:
          type: integer 
        trialAmount:
          type: integer  
        payment:
          $ref: '#/definitions/paymentForRecurringBilling'
        billTo:
          $ref: '#/definitions/billToForRecurringBilling'  
    billToForRecurringBilling:
       type: object
       properties:
        firstName:
          type: string
        lastName:
          type: string
    paymentScheduleInterval:
      type: object
      properties:
        interval:
          $ref: '#/definitions/interval'
        startDate:
          type: string
        totalOccurrences:
          type: integer 
        trialOccurrences:
          type: integer
    paymentForRecurringBilling:
        type: object
        properties: 
          creditCard:
            $ref: '#/definitions/creditCardForRecurringBilling'
    creditCardForRecurringBilling:
      type: object
      properties:
        cardNumber:
          type: string
        expirationDate:
          type: string         
    interval:
      type: object
      properties:
        length:
          type: string
        unit:
          type: string
    createASubscriptionFromCustomerProfile:
       type: object
       properties:
        ARBCreateSubscriptionRequest:
          $ref: '#/definitions/transactionRequestForASubscriptionFromCustomerProfile'
    transactionRequestForASubscriptionFromCustomerProfile:
      type: object
      properties:
        merchantAuthentication:
          $ref: '#/definitions/merchantAuthentication'
        refId:
          type: string  
        subscription:
          $ref: '#/definitions/subscriptionForcreateASubscriptionFromCustomerProfile'  
    subscriptionForcreateASubscriptionFromCustomerProfile:
       type: object
       properties:
        name:
          type: string
        paymentSchedule:
          $ref: '#/definitions/paymentScheduleInterval'
        amount:
          type: integer 
        trialAmount:
          type: integer  
        profile:
          $ref: '#/definitions/profileForCreateSubscriptionResponse'
    createCancelSubscription:
        type: object
        properties:
           ARBCancelSubscriptionRequest:
             $ref: '#/definitions/ARBCancelSubscriptionRequest'
    ARBCancelSubscriptionRequest:
        type: object
        properties:
          merchantAuthentication:
            $ref: '#/definitions/merchantAuthentication'
          refId:
              type: integer 
          subscriptionId:
              type: integer
    updateSubscriptionResponse:
        type: object
        properties:
           profile:
             $ref: '#/definitions/profileForCreateSubscriptionResponse'
           refId:
              type: string
           messages:
              $ref: '#/definitions/messagesOfPaymentTransactionResponse'  
    updateSplitTenderGroupResponse:
        type: object
        properties:
           messages:
              $ref: '#/definitions/messagesOfPaymentTransactionResponse'            
    createSubscription:
        type: object
        properties:
          subscription:
            $ref: '#/definitions/subscriptionForUpdateSubscription'
    subscriptionForUpdateSubscription:
        type: object
        properties:
          payment:
            $ref: '#/definitions/creditCardUpdateSubscription'
    creditCardUpdateSubscription:
        type: object
        properties:
          creditCard:
            $ref: '#/definitions/creditCardForUpdateSubscription'
    creditCardForUpdateSubscription:
      type: object
      properties:
          cardNumber:
            type: string
          expirationDate:
            type: string        
    chargeACustomerProfile:
      type: object
      properties:
        createTransactionRequest:
          $ref: '#/definitions/createTransactionRequestForChargeACustomerProfile'
    createTransactionRequestForChargeACustomerProfile:
      type: object
      properties:
        merchantAuthentication:
          $ref: '#/definitions/merchantAuthentication'
        refId:
            type: string    
        transactionRequest:
          $ref: '#/definitions/transactionRequestForchargeACustomerProfile'
    transactionRequestForchargeACustomerProfile:
       type: object
       properties:
        transactionType:
          type: string
        amount:
          type: integer
        profile:
           $ref: '#/definitions/profile'
        lineItems:
           $ref: '#/definitions/lineItems'
        processingOptions:
           $ref: '#/definitions/processingOptions' 
        subsequentAuthInformation:
           $ref: '#/definitions/subsequentAuthInformation'
        authorizationIndicatorType: 
           $ref: '#/definitions/authorizationIndicatorType'
    profile:
       type: object
       properties:
        customerProfileId:
          type: integer
        paymentProfile:
          type: integer
    bankAccountDebitAccount:
      type: object
      properties:
        bankAccount:
          $ref: '#/definitions/bankAccountForDebitABankAccount'
    bankAccountForDebitABankAccount:
      description: This object contains the customer's bank account payment information.
      properties:
        accountType:
          type: integer
        routingNumber:
          type: integer
        accountNumber:
          type: integer
        nameOnAccount:
          type: string
    createTransactionRequest:
      type: object
      properties:
        merchantAuthentication:
          $ref: '#/definitions/merchantAuthentication'
        refId:
            type: string  
        transactionRequest:
          $ref: '#/definitions/transactionRequest'  
    createTransactionRequestForPreviousAuthorizedAmount:
      type: object
      properties:
        merchantAuthentication:
          $ref: '#/definitions/merchantAuthentication'
        refId:
            type: string    
        transactionRequest:
          $ref: '#/definitions/transactionRequestForPreviousAuthorizedAmount'
    merchantAuthentication:
       type: object
       properties:
        name:
          type: string
        transactionKey:
          type: string
    transactionRequest:
       type: object
       properties:
        transactionType:
          type: string
        amount:
          type: integer
        payment:
           $ref: '#/definitions/CCpayment'
        lineItems:
          $ref: '#/definitions/lineItems'
        tax:
          $ref: '#/definitions/tax'
        duty:
          $ref: '#/definitions/duty'
        shipping:
          $ref: '#/definitions/shipping'
        poNumber:
          type: string
        customer:
          $ref: '#/definitions/customer'
        billTo:
          $ref: '#/definitions/billTo'
        shipTo:
          $ref: '#/definitions/shipTo'
        customerIP:
          type: string  
        transactionSettings:
          $ref: '#/definitions/transactionSettings'
        userFields:
          $ref: '#/definitions/userFields'
        processingOptions:
          $ref: '#/definitions/processingOptions'
        subsequentAuthInformation:
          $ref: '#/definitions/subsequentAuthInformation'  
        authorizationIndicatorType:
          $ref: '#/definitions/authorizationIndicatorType'
    transactionRequestForCaptureFundsAuthorizedThroughAnotherChannel:
       type: object
       properties:
        merchantAuthentication:
           $ref: '#/definitions/merchantAuthentication'
        refId:
            type: string    
        transactionRequest:
          $ref: '#/definitions/transactionRequestForcreateCaptureFundsAuthorizedThroughAnotherChannel'   
    CCpayment:
        type: object
        properties:
         creditCard:
           $ref: '#/definitions/creditCard'
    creditCard:
        type: object
        properties:
          cardNumber:
            type: integer
          expirationDate:
            type: string
          cardCode:
            type: integer     
    lineItems:
        type: object
        properties:
             lineItem:
               $ref: '#/definitions/lineItem'
    lineItem:           
       type: object
       properties:
        itemId:
          type: string
        name:
          type: string
        description:
          type: string
        quantity:
          type: integer
        unitPrice:
          type: integer       
    customer:
      type: object
      properties:
         id:
          type: string 
    tax:
      type: object
      properties:
        amount:
          type: string
        name:
          type: string
        description:
          type: string
    duty:
      type: object
      properties:
        amount:
          type: integer
        name:
          type: string
        description:
          type: string   
    shipping:
      type: object
      properties:
        amount:
          type: integer
        name:
          type: string
        description:
          type: string
        poNumber:
          type: string
        customer Id:
          type: integer
    shippingFoDebitBankAccount:
      type: object
      properties:
        amount:
          type: integer
        name:
          type: string
        description:
          type: string
    billTo:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        company:
          type: string
        address:
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: integer 
        country:
          type: string
    shipTo:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        company:
          type: string
        address:
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string 
        country:
          type: string
    transactionSettings:
      type: object
      properties:
          settings:
               $ref: '#/definitions/settings'
    settings:
      type: object
      properties:
        settingName:
          type: string
        settingValue:
          type: string      
    userFields:
      type: object
      properties:
       userField:
               $ref: '#/definitions/userField'
    userField:
      type: object
      properties:
        name:
          type: string
        value:
          type: string        
    processingOptions:
      type: object
      properties:
        isSubsequentAuth:
          type: boolean
    subsequentAuthInformation:
      type: object
      properties:
        originalNetworkTransId:
          type: string
        originalAuthAmount:
          type: integer
        reason:
          type: string
    authorizationIndicatorType:
      type: object
      properties:
        authorizationIndicator:
          type: string
    refundRequest:
      description: Model for RefundRequest
      title: refundRequest
      type: object
      properties:
        paymentInformation:
          $ref: '#/definitions/paymentInformation'
        orderInformation:
          $ref: '#/definitions/orderInformation'
        buyerInformation:
          $ref: '#/definitions/buyerInformation'
        deviceInformation:
          $ref: '#/definitions/deviceInformation'
        pointOfSaleInformation:
          $ref: '#/definitions/pointOfSaleInformation'
    captureRequest:
      description: Model for CaptureRequest
      title: captureRequest
      type: object
      properties:
        orderInformation:
          $ref: '#/definitions/orderInformation'
        buyerInformation:
          $ref: '#/definitions/buyerInformation'
        deviceInformation:
          $ref: '#/definitions/deviceInformation'
        pointOfSaleInformation:
          $ref: '#/definitions/pointOfSaleInformation'
    creditRequest:
      description: Model for CaptureRequest
      title: creditRequest
      type: object
      properties:
        paymentInformation:
          $ref: '#/definitions/paymentInformation'
        orderInformation:
          $ref: '#/definitions/orderInformation'
        buyerInformation:
          $ref: '#/definitions/buyerInformation'
        deviceInformation:
          $ref: '#/definitions/deviceInformation'
        pointOfSaleInformation:
          $ref: '#/definitions/pointOfSaleInformation'
    clientReferenceInformation:
      type: object
      properties:
        code:
          type: string
          description: |
            Client-generated order reference or tracking number. CyberSource recommends that you send a unique value for each
            transaction so that you can perform meaningful searches for the transaction.
    processingInformation:
      type: object
      properties:
        capture:
          type: boolean
          description: Submit `true` to capture the the payment after it is successfully authorized.
          default: true
        paymentSolution:
          type: string
          x-example: A1000004
          description: The solution ID is generated by Authorize.Net and provided to the solution provider. Alphanumeric. 50-character maximum.
        batch:
          $ref: '#/definitions/batch'
        recurringBilling:
          type: boolean
          x-example: false
          description: Indicates whether the payment is part of a subscription.createASubscription
        followUpAction:
          type: string
          description: Follow up action to be taken once transaction is successful. Valid values are `CREATE_CUSTOMER_PROFILE` and `CREATE_CUSTOMER_PAYMENT_PROFILE`.
    orderInformation:
      type: object
      properties:
        amountDetails:
          $ref: '#/definitions/amountDetail'
        billTo:
          type: object
          description: billto address definition
          allOf:
            - $ref: '#/definitions/baseAddress'
        shipTo:
          type: object
          description: shipTo address definition
          allOf:
            - $ref: '#/definitions/baseAddress'
        lineItems:
          type: array
          items:
            $ref: '#/definitions/items'
        invoiceDetails:
          $ref: '#/definitions/invoiceDetails'
        description:
          type: string
          description: Contains information about the order.
      required:
        - amountDetails
    invoiceDetails:
      type: object
      properties:
        purchaseOrderNumber:
          type: string
          x-example: 456654
          description: The merchant-assigned purchase order number. The purchase order number must be created dynamically on the merchant's server and provided on a per-transaction basis. Up to 25 characters (no symbols).
        taxable:
          type: boolean
          x-example: false
          description: Indicates whether this payment is exempt from tax.
    buyerInformation:
      type: object
      properties:
        merchantCustomerId:
          type: string
          description: 'The unique customer ID used to represent the customer associated with the transaction. If you use customer IDs, your solution should generate the customer ID and send it with your transaction requests. Authorize.Net does not generate customer IDs.Use alphanumeric characters only, without spaces, dashes, or other symbols.'
        customerType:
          type: string
          description: Type of customer. Valid values are `individual` or `business`.
        email:
          type: string
          description: 'The customer''s valid email address. For example, janedoe@example.com.'
    deviceInformation:
      type: object
      properties:
        ipAddress:
          type: string
          x-example: 192.168.1.1
          description: 'IP address of customer initiating the transaction. If this value is not passed, it will default to 255.255.255.255. Required only when the merchant is using customer IP based AFDS filters. Up to 15 characters (no letters).'
    consumerAuthenticationInformation:
      type: object
      properties:
        cavv:
          type: string
          description: 'The Cardholder Authentication Verification Value (CAVV) for a Visa transaction, or Accountholder Authentication Value (AVV)/ Universal Cardholder Authentication Field indicator (UCAF) for a Mastercard transaction. The cardholder authentication process generates the CAVV, AAV, or UCAF value prior to submitting the transaction. Invalid values will result in Response Reason Code 117. This field is currently supported through Chase Paymentech, FDMS Nashville, Global Payments and TSYS.'
        eciRaw:
          type: string
          description: |-
            The Electronic Commerce Indicator (ECI) value for a Visa transaction, or the Universal Cardholder Authentication Field indicator (UCAF) for a Mastercard transaction. The cardholder authentication process generates the ECI or UCAF value prior to submitting the transaction.
  
            Required only for payment requests processed through 3D Secure cardholder authentication programs, such as Visa Secure or SecureCode.
  
            Invalid values will result in Response Reason Code 116.
  
            This field is currently supported through Chase Paymentech, FDMS Nashville, Global Payments and TSYS.
    pointOfSaleInformation:
      type: object
      properties:
        terminalID:
          type: string
          description: Unique identifier of the terminal that processed the transaction. Useful for reporting.
    payment:
      type: object
      description: |
        `Payment` is returned for a successful transaction.
      properties:
        _links:
          $ref: '#/definitions/paymentLinks'
        id:
          type: string
          x-example: 2252111088
          description: 'Unique identifier for the transaction, generated by Authorize.Net. Reference this identifier in follow-up requests, such as a refund or GET request.'
        status:
          type: string
          x-example: Approved
          description: |
            Brief description of the status of the transaction. One of the folloiwng&#58;
  
              * `AUTHORIZED`
  
              * `CAPTURED`
  
              * `INTERNAL_ERROR`
  
              * `REFUND_SETTLED`
  
              * `REFUND_INITIATED`
  
              * `approvedReview`
  
              * `DECLINED`
  
              * `FAILED`
  
              * `EXPIRED`
  
               * `failedReview`
  
              * `SETTLED`
  
              * `SETTLEMENT_ERROR`
  
              * `PENDING_REVIEW`
  
              * `VOIDED`
  
              * `FDSPendingReview`
  
              * `FDSAuthorizedPendingReview`
  
              * `returnedItem`
  
        clientReferenceInformation:
          $ref: '#/definitions/clientReferenceInformation'
        processorInformation:
          $ref: '#/definitions/processorInformation'
        submitTimeUTC:
          type: string
          x-example: '2016-03-01T23:20:25.997Z'
          description: 'The time that the transaction was submitted, in Coordinated Universal Time.'
        orderInformation:
          $ref: '#/definitions/orderInformation'
        paymentInformation:
          $ref: '#/definitions/paymentInformation'
        fraudInformation:
          $ref: '#/definitions/fraudInformation'
        followUpResponse:
          $ref: '#/definitions/followUpResponse'
    paymentCollection:
      description: Model for PaymentCollection
      properties:
        _link:
          $ref: '#/definitions/collectionLinks'
        _embedded:
          $ref: '#/definitions/paymentsList'
        totalTransactions:
          type: integer
          x-example: 214
          description: Total number of transactions returned.
    paymentLinks:
      properties:
        self:
          $ref: '#/definitions/link'
        refund:
          $ref: '#/definitions/link'
        capture:
          $ref: '#/definitions/link'
    batch:
      description: Contains information about the batch that processed the transaction.
      title: batch
      type: object
      properties:
        batchID:
          type: string
          description: The unique identifier of the batch.
        settlementState:
          type: string
          description: |-
            Status of the batch. One of the following
            * `settledSuccessfully`
            * `settlementError`
            * `pendingSettlement`
        settlmentTimeUTC:
          type: string
          description: 'Date and time when the batch was settled, expressed in Coordinated Universal Time. A T character separates the date from the time. For example, `YYYY-MM-DDThh:mm:ss`.'
    fraudInformation:
      description: Contains fraud information for a transaction.
      title: fraudInfromation
      type: object
      properties:
        fraudFilterList:
          type: array
          items:
            $ref: '#/definitions/fraudFilter'
        fraudAction:
          type: string
          description: |
            The action applied to the transaction by the merchant's Advanced Fraud Detection Suite (AFDS) settings.<br />
            When multiple filters apply to a transaction, we will take the most restrictive action. For example, if a transaction triggers two AFDS filters, and one filter returns hold while the other filter returns reject, we will reject the transaction instead of holding it. <br />
            Actions include &#58; <br />
            * `reject` '“ Ignores the transaction outright, except for AFDS reporting. <br /><br />
            * `decline` '“ Marks the transaction as declined but include it in the merchant's transaction reporting. <br /><br />
            * `hold` â€“ Holds the transaction for manual review, and do not authorize unless the merchant approves it. <br /><br />
            * `authAndHold` â€“ Submits the transaction for authorization, but hold it for manual review, and do not settle unless the merchant approves it. <br /><br />
            * `report` â€“ Records the filter action but take no other action.
    paymentsList:
      properties:
        payments:
          type: array
          items:
            $ref: '#/definitions/payments'
    fraudFilter:
      properties:
        name:
          type: string
          description: Name of the fraud filter.
        action:
          type: string
          description: |
            Setting for the fraud filter. The `FDSFilterAction` setting is the most restrictive action setting. <br />
            One of&#58;
            * `reject`
  
            * `decline`
            * `hold`
  
            * `authAndHold`
  
            * `report`
    payments:
      properties:
        id:
          type: string
          x-example: 123
          description: The unique identifier of the transaction. This is returned in the orginal transaction response.
        submitTimeUTC:
          type: string
          description: 'The time that the original transaction was submitted, in Coordinated Universal Time.'
        status:
          type: string
          description: |-
            Brief description of the status of the transaction. One of the folloiwng -
  
              * `authorizedPendingCapture`
  
              * `capturedPendingSettlement`
  
              * `communicationError`
  
              * `refundSettledSuccessfully`
  
              * `refundPendingSettlement`
  
              * `approvedReview`
  
              * `declined`
  
              * `couldNotVoid`
  
              * `expired`
  
              * `generalError`
  
              * `failedReview`
  
              * `settledSuccessfully`
  
              * `settlementError`
  
              * `underReview`
  
              * `voided`
  
              * `FDSPendingReview`
  
              * `FDSAuthorizedPendingReview`
  
              * `returnedItem`
  
        _links:
          $ref: '#/definitions/selfLink'
    processorInformation:
      type: object
      properties:
        approvalCode:
          type: string
          x-example: D1T1KD
          description: Authorization or approval code.
        avs:
          type: object
          properties:
            code:
              type: string
              x-example: 'Y'
              description: |-
                Address Verification Service (AVS) response code. Indicates the result of the AVS filter.
  
                *  `A` = Address (Street) matches, ZIP does not.
                *  `B` = Address information not provided for AVS check.
                *  `E` = AVS error.
                *  `G` = Non-U.S. Card Issuing Bank.
                *  `N` = No Match on Address (Street) or ZIP.
                *  `P` = AVS not applicable for this transaction.
                *  `R` = Retry â€” System unavailable or timed out.
                *  `S` = Service not supported by issuer.
                *  `U` = Address information is unavailable.
                *  `W` = Nine digit ZIP matches, Address (Street) does not.
                *  `X` = Address (Street) and nine digit ZIP match.
                *  `Y` = Address (Street) and five digit ZIP match.
                *  `Z` = Five digit ZIP matches, Address (Street) does not.
        cardVerification:
          type: object
          properties:
            resultCode:
              type: string
              description: |-
                Card code verification (CCV) response code. String, 1 character. Valid values include:
  
                * `M` -- CVV matched.
  
                * `N` -- CVV did not match.
  
                * `P` -- CVV was not processed.
  
                * `S` -- CVV should have been present but was not indicated.
  
                * `U` -- The issuer was unable to process the CVV check.
        consumerAuthenticationResponse:
          type: object
          properties:
            code:
              type: string
              description: |-
                Cardholder authentication verification response code.
  
                **Note:** Mastercard transactions always return a null result for this element. Consequently, transaction details for Mastercard transactions do not contain CAVV results.
  
                String, 1 character. Valid values include:
  
                * Blank or not present -- CAVV not validated.
  
                * `0` -- CAVV was not validated because erroneous data was submitted.
  
                * `1` -- CAVV failed validation.
  
                * `2` -- CAVV passed validation.
  
                * `3` -- CAVV validation could not be performed; issuer attempt incomplete.
  
                * `4` -- CAVV validation could not be performed; issuer system error.
  
                * `5` -- Reserved for future use.
  
                * `6` -- Reserved for future use.
  
                * `7` -- CAVV failed validation, but the issuer is available. Valid for U.S.-issued card submitted to non-U.S acquirer.
  
                * `8` -- CAVV passed validation and the issuer is available. Valid for U.S.-issued card submitted to non-U.S. acquirer.
  
                * `9` -- CAVV failed validation and the issuer is unavailable. Valid for U.S.-issued card submitted to non-U.S acquirer.
  
                * `A` -- CAVV passed validation but the issuer unavailable. Valid for U.S.-issued card submitted to non-U.S acquirer.
  
                * `B` -- CAVV passed validation, information only, no liability shift.
    followUpResponse:
      type: object
      properties:
        errorMessage:
          type: string
          description: 'This field is returned only if the transaction processed succesfully, but the follow-up action of creating a customer and/or payment profile failed.'
        customer:
          $ref: '#/definitions/customerPayment'
    paymentMethodLinks:
      properties:
        self:
          $ref: '#/definitions/link'
        customer:
          $ref: '#/definitions/link'
    paymentMethod:
      description: Contains information about the method of payment.
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the `paymentMethod` object in this transaction.
        default:
          type: boolean
          x-example: 'true'
          description: Setting this boolean to `true` marks this payment method as the default for this customer.
        billTo:
          $ref: '#/definitions/baseAddress'
          description: Coontains the customer's billing address.
        paymentInformation:
          $ref: '#/definitions/paymentInformation'
        _links:
          $ref: '#/definitions/paymentMethodLinks'
    paymentMethodCollection:
      properties:
        _links:
          $ref: '#/definitions/collectionLinks'
        _embedded:
          $ref: '#/definitions/paymentMethodList'
        totalPaymentMethods:
          type: integer
          x-example: 1243
          description: Total number of payment methods for this transaction.
    paymentMethodList:
      properties:
        paymentMethods:
          type: array
          items:
            $ref: '#/definitions/paymentMethods'
    paymentMethods:
      properties:
        id:
          type: string
          description: Unique identifier for the `paymentMethods` object in this transaction.
        default:
          type: boolean
        paymentInformation:
          $ref: '#/definitions/paymentInformation'
        _links:
          $ref: '#/definitions/paymentMethodLinks'
    CreateCustomer:
      description: Model for CreateCustomer
      required:
        - identifier
      properties:
        description:
          type: string
          x-example: Customer Description
        identifier:
          $ref: '#/definitions/Identifier'
    EventType:
      properties:
        name:
          type: string
          x-example: net.authorize.customer.created
      description: 'Name of the event type. For a complete list of event types, see the [Webhooks API Documentation](https://developer.authorize.net/api/reference/features/webhooks.html#Event_Types_and_Payloads) page.'
    CreateWebhookBody:
      description: Model for Create Webhook
      type: object
      properties:
        name:
          type: string
          description: Contains details for the creation or update of a webhook.
          x-example: WebhookEvents
        url:
          type: string
          description: Callback URL for the webhook.
          x-example: 'https://example.com/notification'
        eventTypes:
          type: array
          items:
            type: string
          description: 'List of events that will trigger notifications for this webhook. For a complete list of event types, see the [Webhooks API Documentation](https://developer.authorize.net/api/reference/features/webhooks.html#Event_Types_and_Payloads) page.'
          x-example:
            - net.authorize.customer.created
            - net.authorize.customer.paymentProfile.created
            - net.authorize.customer.subscription.created
        status:
          type: string
          description: New status of the Webhook.
          x-example: Active
    GetWebhookResponse:
      description: Response model for get a Webhook
      properties:
        _links:
          $ref: '#/definitions/selfLink'
        webhookId:
          type: string
          description: Unique identifier of the notification. The identifier was sent in the original notification.
          x-example: bb855023-a5b5-47b6-b039-68a41844618a
        name:
          type: string
          description: Label of the new Webhook.
          x-example: WebhookEvents
        status:
          type: string
          description: Unique identifier of the webhook. The identifier was sent in the response to the webhook request.
          x-example: Active
        url:
          type: string
          description: Callback Url for the webhook.
          x-example: 'https://example.com/notification'
        eventTypes:
          type: array
          items:
            type: string
          description: 'List of events that will trigger notifications for this webhook. For a complete list of event types, see the [Webhooks API Documentation](https://developer.authorize.net/api/reference/features/webhooks.html#Event_Types_and_Payloads) page.'
          x-example:
            - net.authorize.customer.created
            - net.authorize.customer.paymentProfile.created
            - net.authorize.customer.subscription.created
      required:
        - _links
        - webhookId
        - status
        - url
        - eventTypes
    Log:
      description: ''
      properties:
        statusCode:
          type: integer
          description: HTTP status code of the notification attempt.
        retryStage:
          type: integer
          description: ''
        retryCountInStage:
          type: integer
        retryDate:
          type: string
          description: Date of the last retry.
        message:
          type: string
          description: A message about the status.
    RetryLog:
      description: Logging information about notification retries.
      properties:
        logs:
          type: array
          items:
            $ref: '#/definitions/Log'
      required:
        - logs
    Notification:
      description: Notification Model
      properties:
        _links:
          $ref: '#/definitions/selfLink'
        notificationId:
          type: string
          description: Unique identifier of the notification
          x-example: WebhookEvents
        deliveryStatus:
          type: string
          description: Current status of the notification.
          x-example: Delivered
        eventType:
          type: string
          description: Type of event that triggered the notification.
          x-example: net.authorize.payment.authcapture.created
        eventDate:
          type: string
          description: Date and time of the notifications sent.
          x-example: '2017-06-29T16:12:50.847'
        webhookId:
          type: string
          description: Label of the Webhook.
          x-example: 179180a4-bba0-45a2-836c-d0c4438f462e
      required:
        - _links
        - notificationId
        - deliveryStatus
        - eventType
        - eventDate
        - webhookId
    GetNotificationResponse:
      description: Details of a single notification.
      allOf:
        - $ref: '#/definitions/Notification'
        - properties:
            retryLog:
              $ref: '#/definitions/RetryLog'
    GetNotificationsResponse:
      description: List of notifications.
      properties:
        _links:
          $ref: '#/definitions/selfLink'
        notifications:
          type: array
          items:
            $ref: '#/definitions/Notification'
      required:
        - _links
        - notifications
    address:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for an address.
        default:
          type: boolean
          x-example: 'true'
          description: Setting this to `true` marks the address as the customer's default address.
        baseAddress:
          $ref: '#/definitions/baseAddress'
        _links:
          $ref: '#/definitions/addressLinks'
    transaction:
      type: object
      properties:
        transactionResponse:
          $ref: '#/definitions/transactionResponse'
        messagess:
          $ref: '#/definitions/messagess'
    transactionResponse:
      type: object
      properties:
        responseCode:
          type: string
        authCode:
          type: string
        avsResultCode:
          type: string
        cvvResultCode:
          type: string
        cavvResultCode:
          type: string
        transId:
          type: string
        refTransID:
          type: string        
        transHash:
          type: string
        testRequest:
          type: string
        accountNumber:
          type: string
        accountType:
          type: string
        messages:
          type: array
          items:
            $ref: '#/definitions/messages'
        transHashSha2:
          type: string
        SupplementalDataQualificationIndicator:
          type: string
        networkTransId:
          type: string
    transactions:
      type: object
      properties:
        transactions:
          $ref: '#/definitions/transactionsResponse'
        totalNumInResultSet:
          type: string  
        messagess:
          $ref: '#/definitions/messagess'
    transactionsResponse:
      properties:
        transId:
          type: string
        submitTimeUTC:
          type: string
        submitTimeLocal:
          type: string
        transactionStatus:
          type: string
        invoiceNumber:
          type: string
        firstName:
          type: string
        lastName:
          type: string        
        accountType:
          type: string
        accountNumber:
          type: string
        settleAmount:
          type: string
        marketType:
          type: string
        product:
          type: string  
        fraudInformation:
          type: array
          items:
            $ref: '#/definitions/fraudInformation'
    updateSplitTenderGroupMessage:
      type: object
      properties:
          message:
            $ref: '#/definitions/messagessForupdateSplitTenderGroupMessage'
    messagessForupdateSplitTenderGroupMessage:
      type: object
      properties:
        resultCode:
          type: string
        message:
          type: array
          items:
            $ref: '#/definitions/messages'        
    messages:
      type: object
      properties:
        code:
          type: string
        text:
          type: string
    messagess:
      type: object
      properties:
        resultCode:
          type: string
        message:
          type: array
          items:
            $ref: '#/definitions/messages'      
    message:
      type: object
      properties:
        code:
          type: string
        text:
          type: string
    transactionForPayments:
      type: object
      properties:
        transactionResponse:
          $ref: '#/definitions/paymentTransactionResponse'
        refId:
          type: string  
        messages:
          $ref: '#/definitions/messagesOfPaymentTransactionResponse'
    messagesOfPaymentTransactionResponse:
      type: object
      properties:
        resultCode:
          type: string
        message:
          type: array
          items:
            $ref: '#/definitions/message'
    chargeACustomerProfileResponse:
      type: object
      properties:
        transactionResponse:
          $ref: '#/definitions/paymentTransactionResponse'
        transHashSha2:
          type: string    
        profile:
           $ref: '#/definitions/profile'
        SupplementalDataQualificationIndicator:
           $ref: '#/definitions/SupplementalDataQualificationIndicator'
        refId:
          type: string  
        messages:
          $ref: '#/definitions/messagesOfPaymentTransactionResponse'
    chargeATokenizedCreditCardResponse:
      type: object
      properties:
        transactionResponse:
          $ref: '#/definitions/paymentTransactionResponse'
        userFields:
           $ref: '#/definitions/userFields'
        networkTransId:
          type: string
        refId:
          type: string  
        messages:
          $ref: '#/definitions/messagesOfPaymentTransactionResponse'
    createMobileInAppTransactionResponce:
      type: object
      properties:
        transactionResponse:
          $ref: '#/definitions/paymentTransactionResponse'
        userFields:
           $ref: '#/definitions/userFields'
        transHashSha2:
          type: string
        refId:
          type: string  
        messages:
          $ref: '#/definitions/messagesOfPaymentTransactionResponse'
    SupplementalDataQualificationIndicator:
      type: object
      properties:
        networkTransId:
          type: string
    paymentTransactionResponse:
      type: object
      properties:
        responseCode:
          type: string
        authCode:
          type: string
        avsResultCode:
          type: string
        cvvResultCode:
          type: string
        cavvResultCode:
          type: string
        transId:
          type: string
        refTransID:
          type: string        
        transHash:
          type: string
        testRequest:
          type: string
        accountNumber:
          type: string
        accountType:
          type: string
        messages:
          type: array
          items:
            $ref: '#/definitions/messages'
    createPayPalAuthorizeOnlyTransactionResponce:
      type: object
      properties:
        transactionResponse:
          $ref: '#/definitions/payPayAuthorizeOnlyransactionResponse'
        messages:
          $ref: '#/definitions/messagesOfPaymentTransactionResponse'  
    payPayAuthorizeOnlyransactionResponse:
      type: object
      properties:
        responseCode:
          type: string
        rawResponseCode:
          type: string
        transId:
          type: string
        refTransID:
          type: string
        transHash:
          type: string
        accountType:
          type: string
        messages:
          items:
            $ref: '#/definitions/messages'
        secureAcceptance:
          $ref: '#/definitions/secureAcceptance'
    secureAcceptance:
      type: object
      properties:
        SecureAcceptanceUrl:
          type: string
    payPayTransactionResponse:
      type: object
      properties:
        responseCode:
          type: string
        rawResponseCode:
          type: string
        transId:
          type: string
        refTransID:
          type: string
        transHash:
          type: string
        accountType:
          type: string
        errors:
          type: array
          items:
            $ref: '#/definitions/errors'
    messagesForPayPal:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
    createPayPalForAuthorizeAndCaptureTransactionResponc:
      type: object
      properties:
        transactionResponse:
          $ref: '#/definitions/payPayTransactionResponse'
        messages:
          $ref: '#/definitions/messagesOfPaymentTransactionResponse' 
    creditABankAccountResponse:
      type: object
      properties:
        transactionResponse:
          $ref: '#/definitions/messageOfPaymentTransactionResponse'
        refId:
          type: string  
        messages:
          $ref: '#/definitions/messagesOfPaymentTransactionResponse'
    messageOfPaymentTransactionResponse:      
      type: object
      properties:
        responseCode:
          type: string
        authCode:
          type: string
        avsResultCode:
          type: string
        cvvResultCode:
          type: string
        cavvResultCode:
          type: string
        transId:
          type: string
        refTransID:
          type: string        
        transHash:
          type: string
        testRequest:
          type: string
        accountNumber:
          type: string
        accountType:
          type: string
        errors:
          type: array
          items:
            $ref: '#/definitions/errors'
    errors:
      type: object
      properties:
        errorCode:
          type: string
        errorText:
          type: string
          items:
            $ref: '#/definitions/messages'     
    createGetDetailsResponce:
      type: object
      properties:
        transactionResponse:
          $ref: '#/definitions/getDetailsTransactionResponse'
        messages:
          $ref: '#/definitions/messagesOfPaymentTransactionResponse'
    getDetailsTransactionResponse:      
      type: object
      properties:
        responseCode:
          type: string
        authCode:
          type: string
        avsResultCode:
          type: string
        cvvResultCode:
          type: string
        cavvResultCode:
          type: string
        transId:
          type: string
        refTransID:
          type: string        
        transHash:
          type: string
        testRequest:
          type: string
        accountNumber:
          type: string
        accountType:
          type: string
        errors:
          type: array
          items:
            $ref: '#/definitions/errors'
        shipTo:
          items:
            $ref: '#/definitions/shipTo'
    creditResponce:
       type: object
       properties:
        transactionResponse:
          $ref: '#/definitions/getcreditTransactionResponse'
        refId:
          type: string  
        messages:
          $ref: '#/definitions/messagesOfPaymentTransactionResponse'
    getcreditTransactionResponse:      
      type: object
      properties:
        responseCode:
          type: string
        transId:
          type: string
        refTransID:
          type: string
        transHash:
          type: string
        accountType:
          type: string
        errors:
          type: array
          items:
            $ref: '#/definitions/errors'
    fraudManagementResponce:
       type: object
       properties:
        transactionResponse:
          $ref: '#/definitions/getfraudManagementResponceResponse'
        refId:
          type: string  
        messages:
          $ref: '#/definitions/messagesOfPaymentTransactionResponse'
    getfraudManagementResponceResponse:      
      type: object
      properties:
        responseCode:
          type: string
        authCode:
          type: string
        avsResultCode:
          type: string
        cvvResultCode:
          type: string
        cavvResultCode:
          type: string
        transId:
          type: string
        refTransID:
          type: string        
        transHash:
          type: string
        accountNumber:
          type: string
        accountType:
          type: string
        messages:
          type: array
          items:
            $ref: '#/definitions/messagesForPayPal'
        transHashSha2:
          type: string
    createSubscriptionResponce:
       type: object
       properties:
        subscriptionId:
          type: string
        profile:
          $ref: '#/definitions/profileForCreateSubscriptionResponse'
        refId:
          type: string  
        messages:
          $ref: '#/definitions/messagesOfPaymentTransactionResponse'
    profileForCreateSubscriptionResponse:
      type: object
      properties:
        customerProfileId:
          type: string
        customerPaymentProfileId:
          type: string
        customerAddressId:
          type: string
    createASubscriptionFromCustomerProfileResponce: 
       type: object
       properties:
        subscriptionId:
          type: string
        profile:
          $ref: '#/definitions/profileForCreateSubscriptionResponse'
        refId:
          type: string  
        messages:
          $ref: '#/definitions/messagesOfPaymentTransactionResponse'
    getSubscriptionResponce:
       type: object
       properties:
        ARBGetSubscriptionResponse:
          $ref: '#/definitions/ARBGetSubscriptionResponse'
    ARBGetSubscriptionResponse:
       type: object
       properties:
        refId:
          type: string
        messages:
          $ref: '#/definitions/messagesForGetSubscriptionResponse'
        subscription:
          $ref: '#/definitions/subscriptionForGetSubscription'
    messagesForGetSubscriptionResponse:
        type: object
        properties:
          refId:
            type: string
          message:
            $ref: '#/definitions/message'      
    subscriptionForGetSubscription:
       type: object
       properties:
        name:
          type: string
        paymentSchedule:
          $ref: '#/definitions/paymentScheduleInterval'
        amount:
          type: string 
        trialAmount:
          type: string  
        status:
          type: string
        profile:
          $ref: '#/definitions/profileForGetSubscription'
        arbTransactions:
          $ref: '#/definitions/arbTransactions'
    getSettleBatchListResponce:
       properties:
        batchList:
          type: array
          items:
              $ref: '#/definitions/batches'
        messages:
          $ref: '#/definitions/messagesOfPaymentTransactionResponse' 
    batches:
       type: object
       properties:
        batchId:
          type: string
        settlementTimeUTC:
          type: string
        settlementTimeUTCSpecified:
          type: string
        settlementTimeLocal:
          type: string
        settlementTimeLocalSpecified:
          type: string
        settlementState:
          type: string
        paymentMethod:
          type: string
    getTransactionListResponse:
       type: object
       properties:
          getTransactionListResponse:
           $ref: '#/definitions/getTransactionListResponses'
          totalNumInResultSet:
            type: string  
    getTransactionListResponses:
       type: object
       properties:
          -xmlns:
            type: string
          messages:
           $ref: '#/definitions/messageForGetTransactionList'
          transactions:
           $ref: '#/definitions/transactionsForTransactionReporting'
    messageForGetTransactionList:
       type: object
       properties:
          resultCode:
            type: string 
          message:
           $ref: '#/definitions/messagessForGetTransactionList'
    messagessForGetTransactionList:
      properties:
        code:
          type: string
        text:
          type: string
    transactionsForTransactionReporting:
       type: object
       properties:
          transaction:
            type: array
            items:
              $ref: '#/definitions/transactionForTransactionReporting'
    transactionForTransactionReporting:       
      type: object
      properties:
        transaction:
          $ref: '#/definitions/transactionsResponseForTransactionReporting'
        transId:
          type: string
        submitTimeUTC:
          type: string
        submitTimeLocal:
          type: string
        transactionStatus:
          type: string
        invoice:
          type: string
        firstName:
          type: string
        lastName:
          type: string 
        amount:
          type: string   
        accountType:
          type: string
        accountNumber:
          type: string
        marketType:
          type: string 
        product:
          type: string
        mobileDeviceId:
          type: string   
    transactionsResponseForTransactionReporting:
      properties:
        transId:
          type: string
        submitTimeUTC:
          type: string
        submitTimeLocal:
          type: string
        transactionStatus:
          type: string
        invoiceNumber:
          type: string
        firstName:
          type: string
        lastName:
          type: string 
        amount:
          type: string   
        accountType:
          type: string
        accountNumber:
          type: string
        settleAmount:
          type: string
        subscription:
          $ref: '#/definitions/subscriptionForGetTransactionList'
        profile:
           $ref: '#/definitions/profileForGetTransactionList' 
    subscriptionForGetTransactionList:
       type: object
       properties:
        id:
          type: string
        payNum:
          type: string 
    profileForGetTransactionList:
       type: object
       properties:
        customerProfileId:
          type: string
        customerPaymentProfileId:
          type: string  
    getUnsettledTransactionListResponse:
       type: object
       properties:
          transaction:
            type: array
            items:
              $ref: '#/definitions/transactionForUnsettledTransactionReporting'
          transId:
            type: string
          submitTimeUTC:
            type: string
          submitTimeLocal:
            type: string
          transactionStatus:
            type: string
          invoiceNumber:
            type: string
          firstName:
            type: string
          lastName:
            type: string 
          accountType:
            type: string
          accountNumber:
            type: string
          settleAmount:
            type: string     
          marketType:
            type: string 
          product:
            type: string
          hasReturnedItemsSpecified:
            type: string 
          totalNumInResultSet:
            type: string   
          messages:
              $ref: '#/definitions/messagesOfPaymentTransactionResponse'   
    transactionForUnsettledTransactionReporting:       
      type: object
      properties:
        transId:
          type: string
        submitTimeUTC:
          type: string
        submitTimeLocal:
          type: string
        transactionStatus:
          type: string
        invoice:
          type: string
        firstName:
          type: string
        lastName:
          type: string 
        amount:
          type: string   
        accountType:
          type: string
        accountNumber:
          type: string
        marketType:
          type: string 
        product:
          type: string
        profile:
           $ref: '#/definitions/profileForGetTransactionList'
    profileForGetSubscription:
       type: object
       properties:
        merchantCustomerId:
          type: string
        description:
          type: string 
        email:
          type: string  
        customerProfileId:
          type: string
        paymentProfile:
          $ref: '#/definitions/paymentProfile' 
        shippingProfile:  
          $ref: '#/definitions/shippingProfile'
    paymentProfile:
       type: object
       properties:
        customerType:
          type: string
        billTo:  
          $ref: '#/definitions/billTo'
        customerPaymentProfileId:
          type: string
        payment:  
          $ref: '#/definitions/creditCardForGetSubscription'
    creditCardForGetSubscription:
       type: object
       properties:
        creditCard:  
          $ref: '#/definitions/creditCardForRecurringBilling'
    shippingProfile:
       type: object
       properties:      
        firstName:
          type: string
        lastName:
          type: string
        company:
          type: string
        address:
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: integer 
        country:
          type: string
        phoneNumber:
          type: string
        customerAddressId:
          type: string 
    arbTransactions:
       type: object
       properties:
         arbTransactions:  
          $ref: '#/definitions/arbTransaction'
    arbTransaction:
       type: object
       properties:      
        response:
          type: string
        submitTimeUTC:
          type: string
        payNum:
          type: string
        attemptNum:
          type: string
    getSubscriptionStatusResponce:
       type: object
       properties:   
         note:
            type: string  
         refId:
            type: string  
         messages:
            $ref: '#/definitions/messagesOfPaymentTransactionResponse'
    getAListOfSubscriptionsResponce:
       type: object
       properties:
         totalNumInResultSet:
            type: string  
         totalNumInResultSetSpecified:
            type: string 
         subscriptionDetails:
            type: array
            items:
              $ref: '#/definitions/subscriptionDetails'
         refId:
            type: string  
         messages:
            $ref: '#/definitions/messagesOfPaymentTransactionResponse'
    subscriptionDetails:
       type: object
       properties:      
        id:
          type: string
        name:
          type: string
        status:
          type: string
        createTimeStampUTC:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        totalOccurrences:
          type: string
        pastOccurrences:
          type: string
        paymentMethod:
          type: string
        accountNumber:
          type: string
        invoice:
          type: string
        amount:
          type: string 
        currencyCode:
          type: string   
    createCancelSubscriptionResponce:
       type: object
       properties:
         refId:
            type: string  
         messages:
            $ref: '#/definitions/messagesOfPaymentTransactionResponse'
    getTransactionDetailsResponse:
       type: object
       properties:
          getTransactionDetailsResponse:
           $ref: '#/definitions/getTransactionDetailsResponses'
    getTransactionDetailsResponses:
       type: object
       properties:
          -xmlns:
            type: string
          -xmlns:xsd:
            type: string
          -xmlns:xsi:
            type: string  
          messages:
            $ref: '#/definitions/messageForGetTransactionList'
          transactions:
            $ref: '#/definitions/transactionForgetTransactionDetailsResponses'
          batch:
            $ref: '#/definitions/batchForGetTransactionDetails'
          order:
            $ref: '#/definitions/order'
          requestedAmount:
            type: string
          authAmount:
            type: string
          settleAmount:
            type: string
          tax:
            $ref: '#/definitions/taxForGetTransactionDetails'
          shipping:
            $ref: '#/definitions/shippingForGetTransactionDetails'
          duty:
            $ref: '#/definitions/dutyForGetTransactionDetails'
          lineItems:
            $ref: '#/definitions/lineItemsForGetTransactionDetails'
          prepaidBalanceRemaining:
            type: string
          taxExempt:
            type: string
          payment:
            $ref: '#/definitions/paymentForGetTransactionDetails'
          customer:  
            $ref: '#/definitions/customerForGetTransactionDetails'
          billTo:
            $ref: '#/definitions/billToForGetTransactionDetails'
          shipTo:
            $ref: '#/definitions/shipToForGetTransactionDetails'
          recurringBilling:
            type: string
          customerIP:
            type: string
          subscription:
            $ref: '#/definitions/subscriptionForGetTransactionDetails' 
          solution:  
            $ref: '#/definitions/solution' 
          mobileDeviceId:
            type: string
          profile:  
            $ref: '#/definitions/profileForGetTransactionDetails'
          networkTransId:
            type: string
          originalNetworkTransId:
            type: string
          originalAuthAmount:
            type: string
          authorizationIndicator:
            type: string  
    transactionForgetTransactionDetailsResponses:
      type: object
      properties:
        transId:
          type: string
        refTransId:
          type: string
        splitTenderId:
          type: string
        submitTimeUTC:
          type: string
        submitTimeLocal:
          type: string
        transactionType:
          type: string
        transactionStatus:
          type: string 
        responseCode:
          type: string   
        responseReasonCode:
          type: string
        responseReasonDescription:
          type: string
        authCode:
          type: string 
        AVSResponse:
          type: string
        cardCodeResponse:
          type: string
        CAVVResponse:
          type: string 
        FDSFilterAction:
          type: string  
        FDSFilters:
           $ref: '#/definitions/FDSFilterToGetTransaction'
    FDSFilterToGetTransaction:
      type: object
      properties:
       FSFilter:
           $ref: '#/definitions/FSFilter'
    FSFilter:
      type: object
      properties: 
        name:
          type: string
        action:
          type: string
    batchForGetTransactionDetails:
      type: object
      properties:
        batchId:
          type: string
        settlementTimeUTC:
          type: string
        settlementTimeLocal:
          type: string
        settlementState:
          type: string
    order:
      type: object
      properties:
        invoiceNumber:
          type: string
        description:
          type: string
        purchaseOrderNumber:
          type: string
    taxForGetTransactionDetails:
      type: object
      properties:
        amount:
          type: string
        name:
          type: string
        description:
          type: string
    shippingForGetTransactionDetails:
      type: object
      properties:
        amount:
          type: string
        name:
          type: string
        description:
          type: string 
    dutyForGetTransactionDetails:
      type: object
      properties:
        amount:
          type: string
    lineItemsForGetTransactionDetails:
      type: object
      properties:
       lineItem:
         type: array
         items:
           $ref: '#/definitions/lineItemForGetTransactionDetails'
    lineItemForGetTransactionDetails:
      type: object
      properties: 
        itemId:
          type: string
        name:
          type: string
        description:
          type: string
        quantity:
          type: string  
        unitPrice:
          type: string
        taxable:
          type: string
    paymentForGetTransactionDetails:
        type: object
        properties:
         creditCard:
           $ref: '#/definitions/creditCardForGetTransactionDetails'
    creditCardForGetTransactionDetails:
        type: object
        properties:
          cardNumber:
            type: string
          expirationDate:
            type: string
          cardType:
            type: string
    customerForGetTransactionDetails:
        type: object
        properties:
          type:
            type: string
          id:
            type: string
          mail:
            type: string
    billToForGetTransactionDetails:
        type: object
        properties:
          firstName:
            type: string
          lastName:
            type: string
          address:
            type: string
          city:
            type: string
          state:
            type: string
          zip:
            type: string
          country:
            type: string
          phoneNumber:
            type: string
    shipToForGetTransactionDetails:
        type: object
        properties:
          firstName:
            type: string
          lastName:
            type: string
          address:
            type: string
          city:
            type: string
          state:
            type: string
          zip:
            type: string
          country:
            type: string
    subscriptionForGetTransactionDetails:
        type: object
        properties:
          id:
            type: string
          payNum:
            type: string
          marketType:
            type: string
          product:
            type: string
          returnedItems:
           $ref: '#/definitions/returnedItems'
    returnedItems:
        type: object
        properties:
         returnedItem:
           $ref: '#/definitions/returnedItem'
    returnedItem:
        type: object
        properties:
          id:
            type: string
          dateUTC:
            type: string
          dateLocal:
            type: string
          code:
            type: string
          description:
            type: string  
    solution:
        type: object
        properties:
          id:
            type: string
          name:
            type: string
          vendorName:
            type: string
    profileForGetTransactionDetails:
        type: object
        properties:
          customerProfileId:
            type: string
          customerPaymentProfileId:
            type: string
    getBatchStatisticsResponse:
       type: object
       properties:
          batch:
            $ref: '#/definitions/getBatchStatisticsResponses'
          messages:
              $ref: '#/definitions/messagesOfPaymentTransactionResponse'  
    getBatchStatisticsResponses:
       type: object
       properties:
          batchId:
            type: string
          settlementTimeUTC:
            type: string
          settlementTimeUTCSpecified:
            type: string
          settlementTimeLocal:
            type: string
          settlementTimeLocalSpecified:
            type: string
          settlementState:
            type: string 
          paymentMethod:
            type: string   
          statistics:
            $ref: '#/definitions/statisticsForBatch'
    statisticsForBatch:
       type: array
       items:
            $ref: '#/definitions/statistics'
    statistics:
       type: object
       properties:
          accountType:
            type: string
          chargeAmount:
            type: string
          chargeCount:
            type: string
          refundAmount:
            type: string
          refundCount:
            type: string
          voidCount:
            type: string 
          declineCount:
            type: string
          errorCount:
            type: string
          returnedItemAmount:
            type: string
          returnedItemAmountSpecified:
            type: string
          returnedItemCount:
            type: string
          returnedItemCountSpecified:
            type: string
          chargebackAmount:
            type: string 
          chargebackAmountSpecified:
            type: string
          chargebackCount:
            type: string
          chargebackCountSpecified:
            type: string
          correctionNoticeCount:
            type: string
          correctionNoticeCountSpecified:
            type: string
          chargeChargeBackAmount:
            type: string
          chargeChargeBackAmountSpecified:
            type: string 
          chargeChargeBackCount:
            type: string
          chargeChargeBackCountSpecified:
            type: string
          refundChargeBackAmount:
            type: string
          refundChargeBackAmountSpecified:
            type: string
          refundChargeBackCount:
            type: string
          refundChargeBackCountSpecified:
            type: string
          chargeReturnedItemsAmount:
            type: string 
          chargeReturnedItemsAmountSpecified:
            type: string
          chargeReturnedItemsCount:
            type: string
          chargeReturnedItemsCountSpecified:
            type: string
          refundReturnedItemsAmount:
            type: string
          refundReturnedItemsAmountSpecified:
            type: string
          refundReturnedItemsCount:
            type: string
          refundReturnedItemsCountSpecified:
            type: string
    getMerchantDetailsResponse:
       type: object
       properties:
          isTestMode:
            type: string
          processors:
            $ref: '#/definitions/processors'
          merchantName:
            type: string
          gatewayId:
            type: string
          marketTypes:
            $ref: '#/definitions/marketTypes'
          productCodes:
            $ref: '#/definitions/productCodes'
          paymentMethods:
            $ref: '#/definitions/paymentMethodsForMerchantDetails'
          currencies:
            $ref: '#/definitions/currencies'
          publicClientKey:
             type: string
          messages:
              $ref: '#/definitions/messagesOfPaymentTransactionResponse' 
    processors:
       type: array
       items:
            $ref: '#/definitions/processorsForMerchantDetails'
    processorsForMerchantDetails:
       type: object
       properties:
          name:
            type: string
    marketTypes:
       type: array
       items:
          $ref: '#/definitions/marketType'
    marketType:
      type: object
      properties:
          eCommerce:
            type: string
    productCodes:
       type: array
       items:
          $ref: '#/definitions/productCode'
    productCode:
      type: object
      properties:
          CNP:
            type: string
    paymentMethodsForMerchantDetails:
       type: array
       items:
          $ref: '#/definitions/paymentMethodForMerchantDetails'
    paymentMethodForMerchantDetails:
      type: object
      properties:
          AmericanExpress:
            type: string
          DinersClub:
            type: string
          Discover:
            type: string
          EnRoute:
            type: string
          JCB:
            type: string
          Mastercard:
            type: string
          Visa:
            type: string
    currencies:
       type: array
       items:
          $ref: '#/definitions/currencie'
    currencie:
      type: object
      properties:
          USD:
            type: string
    getAccountUpdaterJobSummaryResponse:
       type: object
       properties:
          auSummary:
            $ref: '#/definitions/auSummaryy'
          refId:
            type: string
          messages:
              $ref: '#/definitions/messageForGetTransactionList'
    auSummaryy:
       type: object
       properties:
          auResponse:
            $ref: '#/definitions/auResponses'
    auResponses:
       type: array
       items:
          $ref: '#/definitions/auResponse'
    auResponse:
      type: object
      properties:
          auReasonCode:
            type: string
          profileCount:
            type: string
          reasonDescription:
            type: string
    getAccountUpdaterJobDetailsResponse:
       type: object
       properties:
            totalNumInResultSet:
              type: string
            auDetails:
              $ref: '#/definitions/auDelete'
            refId:
              type: string
            messages:
              $ref: '#/definitions/messageForGetTransactionList'
    auDelete:
       type: object
       properties:
          auDelete:
            $ref: '#/definitions/auDeleteForAccountUpdaterJobDetails'
          auUpdate:
            $ref: '#/definitions/auUpdates'
    auDeleteForAccountUpdaterJobDetails:
      type: object
      properties:
          customerProfileID:
            type: string
          customerPaymentProfileID:
            type: string
          firstName:
            type: string
          lastName:
            type: string
          updateTimeUTC:
            type: string
          auReasonCode:
            type: string  
          reasonDescription:
            type: string
          creditCard:
            $ref: '#/definitions/creditCardForAccountUpdaterJobDetail'
    creditCardForAccountUpdaterJobDetail:
      type: object
      properties:
          cardNumber:
            type: string
          expirationDate:
            type: string
    auUpdates:
       type: array
       items:
          $ref: '#/definitions/auUpdate'
    auUpdate:
      type: object
      properties:
          customerProfileID:
            type: string
          customerPaymentProfileID:
            type: string
          firstName:
            type: string      
          lastName:
            type: string
          updateTimeUTC:
            type: string
          auReasonCode:
            type: string      
          reasonDescription:
            type: string
          profileCount:
            type: string
          newCreditCard:
            $ref: '#/definitions/newCreditCard'
          oldCreditCard:
            $ref: '#/definitions/oldCreditCard'
    newCreditCard:
      type: object
      properties:
          cardNumber:
            type: string
          expirationDate:
            type: string
    oldCreditCard:
      type: object
      properties:
          cardNumber:
            type: string
          expirationDate:
            type: string
    createAnAcceptPaymentTransactionResponce:
      type: object
      properties:
        transactionResponse:
          $ref: '#/definitions/paymentTransactionResponse'
        userField:
           type: array
           items:
              $ref: '#/definitions/userFieldForcreateAnAcceptPaymentTransaction'
        transHashSha2:
              type: string   
        refId:
          type: string  
        messages:
          $ref: '#/definitions/messagesOfPaymentTransactionResponse'
    userFieldForcreateAnAcceptPaymentTransaction:
      type: object
      properties:
        code:
          type: string
        text:
          type: string
    getAcceptCustomerProfilePageResponse:
       type: object
       properties:
          token:
            type: string
          messages:
              $ref: '#/definitions/messagesOfPaymentTransactionResponse'       
    baseAddress:
      required:
        - address1
      type: object
      properties:
        address1:
          type: string
          x-example: 123 Main St.
          description: 'Number/letter of the address, and the street name. Required if merchant would like to use the Address Verification Service security feature. Required when using GPN Canada or Worldpay Streamline Processing Platform. <br /><br />String, up to 60 characters. Use alphanumeric characters only, without spaces, dashes, or other symbols.'
        administrativeArea:
          type: string
          x-example: WA
          description: 'The state or administrative area. Required only when using a European payment processor. <br /><br />String, up to 40 characters. Use alphanumeric characters only, without spaces, dashes, or other symbols. For US states, use the USPS two-character abbreviation for the state.'
        company:
          type: string
          x-example: 'Widgets, Inc.'
          description: 'Name of the purchasing company, if any. <br /><br /> String, up to 50 characters. Use alphanumeric characters only, without spaces, dashes, or other symbols.'
        country:
          type: string
          x-example: USA
          description: 'Country associated with the address. Required only when using a European payment processor. <br /><br />String, up to 60 characters. Use alphanumeric characters only, without spaces, dashes, or other symbols. For international payment processors, use the ISO 3166 alpha-3 code for the country.'
        firstName:
          type: string
          x-example: John
          description: 'First name associated with customer''s address. Required only when using a European payment processor. <br /><br />String, up to 50 characters. Use alphanumeric characters only, without spaces, dashes, or other symbols.'
        lastName:
          type: string
          x-example: Doe
          description: 'Last name associated with customer''s address. Required only when using a European payment processor. <br /><br />String, up to 50 characters. Use alphanumeric characters only, without spaces, dashes, or other symbols.'
        locality:
          type: string
          x-example: Bellevue
          description: 'City or town of the address. Required only when using a European payment processor. <br /><br />String, up to 40 characters. Use alphanumeric characters only, without spaces, dashes, or other symbols.'
        phoneNumber:
          type: string
          x-example: 000-000-0000
          description: 'Phone number associated with customer''s address. <br /><br />String, up to 25 characters. For example, (123) 555-1234.'
        postalCode:
          type: string
          x-example: '98004'
          description: 'The postal or ZIP code of the customer''s billing address. Required if merchant would like to use the Address Verification Service security feature. Required when using GPN Canada or Worldpay Streamline Processing Platform. String, up to 20 characters. Use alphanumeric characters only, without spaces, dashes, or other symbols.'
    addressLinks:
      properties:
        self:
          $ref: '#/definitions/link'
        customer:
          $ref: '#/definitions/link'
    addressList:
      properties:
        addresses:
          type: array
          items:
            $ref: '#/definitions/addresses'
    addressCollection:
      properties:
        _links:
          $ref: '#/definitions/collectionLinks'
        _embedded:
          $ref: '#/definitions/addressList'
        totalAddresses:
          type: integer
          x-example: 1243
          description: Total number of addresses.
    addresses:
      properties:
        id:
          type: string
          description: Unique identifier of the address.
        default:
          type: boolean
          description: 'If the address is set as the default address for the profile, the value of this element is `true`.'
        firstName:
          type: string
          description: First name of the customer associated with the address.
        lastName:
          type: string
          description: Last name of the customer associated with the address.
        _links:
          $ref: '#/definitions/addressLinks'
    amountDetail:
      required:
        - totalAmount
      properties:
        totalAmount:
          type: string
          description: |
            This is the total amount of the payment and must include tax, shipping, tips, and any other charges. <br /><br /> Decimal, up to 15 digits with a decimal point. Do not use currency symbols. For example, 8.95.
        currency:
          type: string
          description: Currency of the transaction.
        dutyAmount:
          type: string
          description: Amount of duty. The total transaction amount must include this value.
        taxAmount:
          type: string
          description: Amount of tax. The total transaction amount must include this value.
        freightAmount:
          type: string
          description: Amount of the shipping charges. The total transaction amount must include this value.
        authorizedAmount:
          type: string
          description: ''
    bankAccount:
      description: This object contains the customer's bank account payment information.
      required:
        - routingNumber
        - accountNumber
        - nameOnAccount
      properties:
        accountType:
          type: string
          description: |-
            The type of bank account used for the eCheck.Net transaction. The value of `accountType` must be valid for the `echeckType` value submitted. Valid values include&#58;
            * `checking`
            * `savings`
            * `businessChecking`
        routingNumber:
          type: string
          description: 'The ABA routing number. Masked except for the last four digits. For example, XXXX0101. <br /><br /> Numeric, up to 9 digits.'
        accountNumber:
          type: string
          description: 'The bank account number. Masked except for the last four digits. For example, XXXX0101. <br /><br /> Numeric, up to 17 digits.'
        nameOnAccount:
          type: string
          description: 'Name of the person who holds the bank account. <br /><br /> String, up to 22 characters.'
        eCheckType:
          type: string
          description: |-
            The type of eCheck transaction.  Valid values include
            * `PPD`
            * `WEB`
            * `CCD`
            * `TEL`
            * `ARC`
            * `BOC`
        bankName:
          type: string
          description: Name of the bank to which the account belongs.
        checkNumber:
          type: string
          description: 'The number of the check. Do not send `checkNumber` unless `echeckType` is either `ARC` or `BOC`. <br /><br /> Numeric, up to 15 digits.'
    card:
      description: This object contains the customer's credit card payment information.
      type: object
      required:
        - number
        - expirationMonth
        - expirationYear
      properties:
        number:
          type: string
          x-example: '41XXXXXXXXXXXXX'
          description: 'The customer''s credit card number. <br /><br /> Numeric, 13-16 digits.'
        expirationMonth:
          type: string
          description: 'Month that the card expires, in MM format.'
        expirationYear:
          type: string
          description: Year that the card expires in YYYY format.
        type:
          type: string
          description: |-
            Type of credit card. Valid values include&#58;
            * `Visa`
            * `MasterCard`
            * `Discover`
            * `JCB`
            * `DinersClub`
        securityCode:
          type: string
          x-example: '123'
          description: The three or four digit code on the front or back of the card. <br /><br /> This field is required if the merchant would like to use the Card Code Verification (CCV) security feature.<br /><br /> Cardholder information must be stored securely and in accordance with the Payment Card Industry (PCI) Data Security Standard.
    customerPayment:
      type: object
      required:
        - customerId
      properties:
        customerId:
          type: string
          x-example: 10
          description: The ID of the customer profile. Required if you are using a customer profile as the source for payment or shipping information. <br /><br /> 20-character maximum.
        paymentMethodId:
          type: string
          x-example: 2016
          description: The payment profile ID of the customer profile. Designates the payment profile to use for payment and billing information.
    errorResponse:
      description: Model for Error Response
      title: errorResponse
      type: object
      properties:
        message:
          type: string
          description: Describes the error condition.
        reason:
          type: string
          description: 'This is an enum field that describes the business errors returned by the server. The client can use this field to interpret errors returned by the server. '
        informationLink:
          type: string
          description: Contains a URL link to general online documentation for this error.
        correlationId:
          type: string
          format: uuid
        details:
          type: array
          items:
            $ref: '#/definitions/errorDetails'
      required:
        - message
        - reason
    errorDetails:
      description: Error details object.
      title: errorDetails
      type: object
      properties:
        message:
          type: string
          description: Describes the error condition.
        location:
          type: string
          description: Indicates the name of a parameter.
    fluidData:
      description: |-
        This object contains encrypted payment data that can be submitted in the following types of payments&#58;
        * Authorize.Net Accept
        * Visa Checkout
        * Apple Pay
        * Android Pay
      type: object
      required:
        - descriptor
        - value
      properties:
        key:
          type: string
          description: Only for Visa Checkout payments. This data is received from the JavaScript Visa Checkout integration's `encKey` field. <br /><br /> 128-character maximum.
        descriptor:
          type: string
          description: 'Specifies how the request should be processed. The value of `dataDescriptor` is based on the source of the value of `dataValue`. For example, for Accept, the value is `COMMON.ACCEPT.INAPP.PAYMENT`. <br /><br /> 128 characters.'
        value:
          type: string
          description: Base64 encoded data that contains encrypted payment data. The payment gateway expects the encrypted payment data and meta data for the encryption keys. <br /><br /> 8192 characters.
    items:
      type: object
      required:
        - productCode
        - productName
      properties:
        productCode:
          type: string
          x-example: 1
          description: Item identification. 31-character maximum.
        productName:
          type: string
          x-example: vase
          description: A short description of the item. 31-character maximum.
        quantity:
          type: number
          x-example: 18
          description: The number of items sold. Up to a maximum of four decimal places.
        unitPrice:
          type: string
          x-example: '45'
          description: 'Cost of an item per unit, excluding tax, freight, and duty. Up to a maximum of 2 decimal places.'
    collectionLinks:
      properties:
        self:
          $ref: '#/definitions/link'
        next:
          $ref: '#/definitions/link'
        previous:
          $ref: '#/definitions/link'
    link:
      properties:
        href:
          type: string
          description: URI of the linked resource.
        title:
          type: string
          description: Label of the linked resource.
        method:
          type: string
          description: HTTP method of the linked resource.
    merchantDefinedInformation:
      type: object
      properties:
        key:
          type: string
          x-example: 1
          description: Item identification. 50-character maximum.
        value:
          type: string
          x-example: vase
          description: A short description of the item. 50-character maximum.
    paymentInformation:
      description: |
        This object sets the method of payment for a transaction. There are four available payment instruments, shown below.
        |Payment Instrument  | Description  |
        |-----|-----|
        | `creditCard` | Contains the customer's credit card payment data. |
        | `BankAccount`  | Contains the customer's banking information.   |
        | `FluidData` |  Contains enrypted payment data for use with the following tpyes of transactions -
        | | * Visa Checkout |
        | | * Authorize.Net Accept |
        | | * Apple Pay |
        | | * Android Pay |
        | `CustomerPayment` | Contains the Authorize.Net customer profile information necessary to create a payment transaction from stored payment data. |
      type: object
      properties:
        card:
          $ref: '#/definitions/card'
        bankAccount:
          $ref: '#/definitions/bankAccount'
        fluidData:
          $ref: '#/definitions/fluidData'
        customer:
          $ref: '#/definitions/customerPayment'
        tokenizedCard:
          $ref: '#/definitions/tokenizedCard'
        validate:
          type: boolean
          x-example: 'true'
          description: |-
            If the customer profile contains no payment data, this field should not be sent.
  
            Submitting this field with a value of `true` sends a $0 or $0.01 (depending on card type and processor) live transaction is processed for the card and then immediately voided. Address is required for cards that support $0 authorizations and will be validated along with card code if submitted.
  
            Submitting this field with a value of false, the card data is validated using simple mathematical checks to confirm that it appears to be valid. It is not a guarantee that the card is legitimate and customer data is not validated.
    selfLink:
      properties:
        self:
          $ref: '#/definitions/link'
    tokenizedCard:
      type: object
      required:
        - number
        - expirationMonth
        - expirationYear
        - cryptogram
      properties:
        number:
          type: string
          description: The credit card token.
        expirationMonth:
          type: string
          description: 'The token''s expiration month in MM format. Use the value of the token''s expiration date, not the card''s expiration date.'
        expirationYear:
          type: string
          description: 'The token''s expiration year in YYYY format. Use the value of the token''s expiration date, not the card''s expiration date.'
        cryptogram:
          type: string
          description: 'Set this to the value of the cryptogram received from the token provider. This field confirms that the payment data is tokenized, and it must be submitted when the credit card number is a tokenized credit card.'
          
